/*! For license information please see main.4af02f3892bcbd2dcd3b.js.LICENSE.txt */
(()=>{"use strict";var n,e,t,r,i,o={1484:(n,e,t)=>{var r=t(745),i=t(1369);function o(n){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},o(n)}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){l(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e,t){return(e=function(n){var e=function(n,e){if("object"!==o(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===o(e)?e:String(e)}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function u(n){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},u(n)}function c(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,d(r.key),r)}}function f(n,e,t){return(e=d(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function d(n){var e=function(n,e){if("object"!==u(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===u(e)?e:String(e)}var p,h,y,b=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"ExplorerExtension",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Explorer Extension";!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),f(this,"id",""),f(this,"name",""),this.id=e,this.name=t}var e,t,r;return e=n,(t=[{key:"activate",value:function(n){i.ZP.editorTree.onClose((function(n,e){})),i.ZP.editorTree.onCloseAll((function(n){})),i.ZP.editorTree.onCloseOthers((function(n,e){})),i.ZP.editorTree.onCloseSaved((function(n){})),i.ZP.editorTree.onSaveAll((function(n){})),i.ZP.editor.onCloseAll((function(n){})),i.ZP.editor.onCloseOther((function(n,e){})),i.ZP.editor.onCloseToLeft((function(n,e){})),i.ZP.editor.onCloseToRight((function(n,e){})),i.ZP.editor.onCloseTab((function(n,e){})),i.ZP.editor.onUpdateTab((function(n){i.ZP.editor.updateTab(s(s({},n),{},{status:"edited"}))}))}},{key:"dispose",value:function(n){throw new Error("Method not implemented.")}}])&&c(e.prototype,t),r&&c(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}();function v(n){for(var e=n.split(/[/\\]/),t=[],r=e.length,i=0;i<r;i++)if(e[i]&&"."!==e[i]){if(".."===e[i]&&!t.pop())throw"No more parent node";t.push(e[i])}return t.unshift("."),t.join("/")}function m(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.join("/").replace(/[/\\]+/g,"/")}const g={id:Number.MAX_SAFE_INTEGER,name:"작업공간",location:".",fileType:"RootFolder",isLeaf:!1,data:"",children:[{id:"1",name:"조각글",location:"./조각글",fileType:"Folder",isLeaf:!1,data:"",children:[{id:"2",name:"가나다라마바사즤츼킈틔픠.pbhhg",location:"./조각글/가나다라마바사즤츼킈틔픠.pbhhg",fileType:"File",isLeaf:!0,data:String.raw(p||(h=["\"\"\"Aheui interpreter in Unsuspected Hangeul\n\nIt passes all the standard aheui test set, although 'loop' takes very much time.\n\nNote that this code is also an Aheui program, making it a polyglot of Aheui and\nUnsuspected Hangeul.\n\nUsage (Python backend):\n    $ python -m pbhhg_py.cli <path to this file> <path to some aheui file>\n\nUsage (Node.js backend)\n    $ node pbhhg_js/cli <path to this file> <path to some aheui file>\n\"\"\"\n\ndef aheui(filepath: str) -> IO[int]:\n    ㄱㅇㄱ ㄹ(rb) 꺼내ㅎㄷ  # IO[File['rb']]\n\n    def with_file(file: File) -> IO[bytes]:\n        ㄴㄱ(all) ㄹ ㄱㅇㄱㅎㄷ\n    하:기로 하다  # IO[bytes]\n\n    def on_read(content: bytes) -> IO[list[str]]:\n        ㄱㅇㄱ  # bytes\n            ㅂㄴㄱㅂㄱ (ㄴ ㄷ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b'\r\n'\n            분리ㅎㄷ  # list[bytes]\n            ㄷㄴㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b'\n'\n            꿰매ㅎㄷ  # bytes\n            ㄷㄴㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b'\n'\n            분리ㅎㄷ  # list[bytes]\n        (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ) # utf8 bytes -> str\n        ㅁㄷㅎㄷ 감싸ㅎㄴ  # IO[list[str]]\n    하:기로 하다\n\n    def into_table(lines: list[str]) -> IO[list[list[tuple | None]]]:\n        def convert(character: str) -> tuple[int, int, int] | None:\n            def is_hangeul_syllable(code: int) -> bool:\n                ㅈㅈㅈㅂㄷㄴㄱ ㄱㅇㄱ 작ㅎㄷ  # code >= 0xAC00\n                ㄱㅇㄱ ㅁㅁㅅㄹㅂㄴㄱ 작ㅎㄷ  # code <= 0xDCA3\n                곱ㅎㄷ\n            ㅎ\n\n            def split_hangeul_syllable(code: int) -> tuple[int, int, int]:\n                ㄱㅇㄱ ㄱㄱㄳㄷㄴ 더ㅎㄷ  # index = code - 0xAC00\n                def _(index: int) -> tuple[int, int, int]:\n                    [\n                        ㄱㅇㄱ ㅁㄴㄴㄴㄱ(588) 나누ㅎㄷ,\n                        ㄱㅇㄱ ㅁㄴㄴㄴㄱ(588) 나머ㅎㄷ ㅁㄹㄱ(28) 나누ㅎㄷ,\n                        ㄱㅇㄱ ㅁㄹㄱ(28) 나머ㅎㄷ\n                    ]\n                    목록ㅎㄹ\n                ㅎㅎㄴ\n            ㅎ\n\n            def _(is_hangeul_syllable, split_hangeul_syllable):\n                ㄱㅇㄴ\n                    (ㄱ ㄷ 가짜ㅎㄱ <평 바꾸기 ㅂㅎㄷ>ㅎㄹ)ㅎㄴ  # utf-16\n                    (ㄴ ㄷ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # uint 16\n                def _(code: int) -> tuple[int, int, int] | None:\n                    if is_hangeul_syllable(code):\n                        # return split_hangeul_syllable(code)\n                        ㄱㅇㄱ ㄴㅇㄴㅎㄴ\n                    else:\n                        빈값ㅎㄱ\n                    ㄱㅇㄱ ㄱㅇㄴㅎㄴㅎㄷ\n                ㅎㅎㄴ\n            ㅎㅎㄷ\n        ㅎ\n\n        def _(convert: Callable[[str], tuple | None]) -> IO[list[list[tuple | None]]]:\n            ㄱㅇㄴ\n            def _(line: str) -> list[tuple | None]:\n                ㄱㅇㄱ 분리ㅎㄴ ㄱㅇㄴ ㅁㄷㅎㄷ\n            ㅎ:ㅁㄷㅎㄷ 감싸ㅎㄴ\n        ㅎㅎㄴ\n    하:기로 하다  # program <- IO[list[list[tuple[int, int, int] | None]]\n\n    def on_program(\n        program: list[list[tuple[int, int, int] | None]],\n    ) -> IO[int]:\n        # state = (program, x, y, x_speed, y_speed, stores, selected_fd, stdin_buffer)\n\n        def execute(\n            choseong: int,\n            jongseong: int,\n            x_speed: int,\n            y_speed: int,\n            stores: list[list[int]],\n            selected_fd: int,\n            stdin_buffer: bytes,\n        ) -> IO[tuple[int, int, list[list[int]], int, bytes]]:\n\n            def push(\n                stores: list[list[int]],\n                fd: int,\n                values: list[int],  # first thing first\n            ) -> list[list[int]]:\n                ㄱㅇㄱ ㄱ(0) ㄴㅇㄱ 발췌ㅎㄹ  # stores[:fd]\n                if fd == QUEUE:\n                    # values + stores[fd]\n                    ㄷㅇㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) 더ㅎㄷ\n                else:\n                    # stores[fd] + values\n                    (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) ㄷㅇㄱ 더ㅎㄷ\n                (ㄴㅇㄱ 븡등긍 ㄴㅎㄷ)ㅎㄷ 목록ㅎㄴ\n                ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ  # stores[fd + 1:]\n                ㄷㅎㄹ\n            ㅎ\n\n            def pop(\n                stores: list[list[int]],\n                fd: int,\n                count: int,\n            ) -> tuple[list[list[int]], list[int]]:  # first thing first\n                if len(stores[fd]) < count:\n                    모자람 뜻밖ㅎㄴ 던지ㅎㄴ\n                else:\n                    [\n                        ㄱㅇㄱ ㄱ ㄴㅇㄱ 발췌ㅎㄹ\n                        # stores[fd][:-count]\n                        (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) ㄱ (ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ) 발췌ㅎㄹ 목록ㅎㄴ\n                        ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ\n                        ㄷㅎㄹ,\n\n                        # stores[fd][-1:-1-count:-1]\n                        (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)\n                            ㄴㄱ (ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ ㄴㄱ 더ㅎㄷ) ㄴㄱ 발췌ㅎㅁ\n                    ] 목록ㅎㄷ\n                ㄴㅇㄱ ㄱㅇㄱㅎㄴ 재다ㅎㄴ ㄷㅇㄱ 작ㅎㄷㅎㄷ\n            ㅎ\n\n            def duplicate(\n                stores: list[list[int]],\n                fd: int,\n            ) -> list[list[int]]:\n                if not stores[fd]:\n                    모자람 뜻밖ㅎㄴ 던지ㅎㄴ\n                else:\n                    ㄱㅇㄱ ㄱ ㄴㅇㄱ 발췌ㅎㄹ  # stores[:fd]\n                    (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)\n                        [ㄴㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)ㅎㄴ] 목록ㅎㄴ\n                        더ㅎㄷ 목록ㅎㄴ\n                    ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ  # stores[fd + 1:]\n                    ㄷㅎㄹ\n                ㄴㅇㄱ ㄱㅇㄱㅎㄴ 재다ㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n            ㅎ\n\n            def swap(\n                stores: list[list[int]],\n                fd: int,\n            ) -> list[list[int]]:\n                if len(stores[fd]) < 2:\n                    모자람 뜻밖ㅎㄴ 던지ㅎㄴ\n                else:\n                    ㄱㅇㄱ ㄱ ㄴㅇㄱ 발췌ㅎㄹ  # stores[:fd]\n                    (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) ㄱ ㄷㄱ 발췌ㅎㄹ  # stores[fd][:-2]\n                        [\n                            ㄴㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)ㅎㄴ,  # stores[fd][-1]\n                            ㄷㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)ㅎㄴ,  # stores[fd][-2]\n                        ] 목록ㅎㄷ 더ㅎㄷ\n                    목록ㅎㄴ\n                    ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ  # stores[fd + 1:]\n                    ㄷㅎㄹ\n                ㄴㅇㄱ ㄱㅇㄱㅎㄴ 재다ㅎㄴ ㄷ 작ㅎㄷㅎㄷ\n            ㅎ\n\n            def input_char(stdin_buffer: bytes) -> IO[tuple[int, bytes]]:\n                ㄱ(stdin) ㄹ('rb') 꺼내ㅎㄷ  # IO[File]\n                def on_open(stdin: File) -> IO[bytes, bytes]:\n                    if len(stdin_buffer) == 0:\n                        ㄴ(1) ㄹ ㄱㅇㄱㅎㄷ  # IO[bytes]\n                        def on_raw_read(character: bytes) -> IO[tuple]:\n                            [ㄱㅇㄱ, ㄱㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                        하:기로 하다\n                    else:\n                        [ㄱ ㄱㅇㄴㅎㄴ, ㄱㅇㄴ ㄴ 발췌ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                    ㄱㅇㄴ 재다ㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n                    def on_read_first(\n                        first_byte: bytes, stdin_buffer: bytes\n                    ) -> IO[bytes]:  # need to change this func\n                        ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ\n                        def count_remaining_bytes(first_code: int) -> int:\n                            ㄱ(0) if first_code < 0x80 else\n                                ㄴ(2) if first_code < 0xE0 else\n                                    ㄷ(3) if first_code < 0xF0 else\n                                        ㄹ(4)\n                                    ㄱㅇㄱ ㄱㅅㄹ 작ㅎㄷㅎㄷ\n                                ㄱㅇㄱ ㄱㅁㄹ 작ㅎㄷㅎㄷ\n                            ㄱㅇㄱ ㄱㄱㄷ 작ㅎㄷㅎㄷ\n                        ㅎㅎㄴ\n                        def read_remaining_bytes(\n                            num_remaining_bytes: int\n                        ) -> IO[tuple[bytes, bytes]]:\n                            ㄱㅇㄱ ㄴㄱ ㄴㅇㄴ 재다ㅎㄴ 곱ㅎㄷ 더ㅎㄷ\n                            def fill_buffer(\n                                deficit: int\n                            ) -> IO[bytes]:\n                                if deficit > 0:\n                                    ㄱㅇㄱ ㄹ ㄱㅇㄹㅎㄷ\n                                    def on_read_supplement(supplement: bytes):\n                                        ㄴㅇㄹ ㄱㅇㄱ 더ㅎㄷ 감싸ㅎㄴ\n                                    하:기로 하다\n                                else:\n                                    ㄴㅇㄷ 감싸ㅎㄴ\n                                ㄱ ㄱㅇㄱ 작ㅎㄷㅎㄷ\n                            ㅎㅎㄴ\n                            def on_fill_buffer(\n                                stdin_buffer: bytes\n                            ) -> IO[tuple[bytes, bytes]]:\n                                [\n                                    ㄱㅇㄷ ㄱㅇㄱ ㄱ ㄱㅇㄴ 발췌ㅎㄹ 더ㅎㄷ,\n                                    ㄱㅇㄱ ㄱㅇㄴ 발췌ㅎㄷ,\n                                ] 목록ㅎㄷ 감싸ㅎㄴ\n                            하:기로 하다\n                        ㅎㅎㄴ\n                    ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n                하:기로 하다\n                def on_read_all(\n                    character: bytes, stdin_buffer: bytes\n                ) -> IO[tuple[int, bytes]]:\n                    [\n                        ㄱㅇㄱ\n                            (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # utf8 to str\n                            (ㄱ ㅁ 가짜ㅎㄱ <평 바꾸기 ㅂㅎㄷ>ㅎㄹ)ㅎㄴ  # str to utf32le\n                            (ㄴ ㅁ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ,  # utf32le to uint32\n                        ㄴㅇㄱ\n                    ] 목록ㅎㄷ 감싸ㅎㄴ\n                ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n            ㅎ\n\n            def input_int(stdin_buffer: bytes) -> IO[tuple[int, bytes]]:\n                ㄱ(stdin) ㄹ('rb') 꺼내ㅎㄷ  # IO[File]\n                def on_open(file: File) -> IO[bytes]:\n                    문자ㅎㄱ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b''\n                    진짜ㅎㄱ\n                    ㄱㅇㄴ\n                    def read_digits(\n                        digits: bytes, is_first: bool, stdin_buffer: bytes\n                    ) -> IO[tuple[bytes, bytes]]:\n                        if len(stdin_buffer) == 0:\n                            ㄴ(1) ㄹ ㄱㅇㄴㅎㄷ  # IO[bytes]\n                            def on_raw_read(character: bytes) -> IO[tuple]:\n                                if character == b'\r':\n                                    ㄴ(1) ㄹ ㄱㅇㄷㅎㄷ  # IO[bytes]\n                                    def on_more_raw_read(character: bytes):\n                                        if character == b'\n':\n                                            [ㄱㅇㄱ, ㄷㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                        else:  # just keep it\n                                            [ㄱㅇㄴ, ㄱㅇㄱ ㄷㅇㄷ 더ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                        ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ ㄷㄴㄱ ㄴㅎㄷㅎㄷ\n                                    하:기로 하다\n                                else:\n                                    [ㄱㅇㄱ, ㄷㅇㄴ] 목록ㅎㄷ 감싸ㅎㄴ\n                                ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ ㅂㄴㄱ ㄴㅎㄷㅎㄷ\n                            하:기로 하다\n                        else:\n                            [ㄱ ㄱㅇㄱㅎㄴ, ㄱㅇㄱ ㄴ 발췌ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                        ㄷㅇㄱ 재다ㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n                        def on_read(\n                            character: bytes, stdin_buffer: bytes\n                        ) -> IO[tuple[bytes, bytes]]:\n                            ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ\n                            def _(code: int) -> IO[tuple[bytes, bytes]]:\n                                if is_sign_or_digit(code):\n                                    (ㄱㅇㄷ ㄱㅇㄴ 더ㅎㄷ) 가짜ㅎㄱ ㄷㅇㄷ ㄷㅇㅎㄹ\n                                else:\n                                    if character in b' \t\n':\n                                        # discard `character` and return\n                                        [ㄱㅇㄷ, ㄷㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                    else:\n                                        [ㄱㅇㄷ, ㄱㅇㄴ ㄷㅇㄷ 더ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                    (ㄱㅇㄱ ㄱㅁㄱ ㄴㅎㄷ)  # b' '\n                                    || (ㄱㅇㄱ ㄴㄴㄱ ㄴㅎㄷ)  # b'\t'\n                                    || (ㄱㅇㄱ ㄷㄴㄱ ㄴㅎㄷ)  # b'\n'\n                                    더ㅎㄹㅎㄷ\n                                ㄴㅇㄷ  # is_first\n                                    (ㄱㅇㄱ ㅂㅂㄱ ㄴㅎㄷ)  # b'+'\n                                    (ㄱㅇㄱ ㄹㅂㄱ ㄴㅎㄷ)  # b'-'\n                                    더ㅎㄷ\n                                곱ㅎㄷ\n                                    (ㅈㅂㄱ ㄱㅇㄱ 작ㅎㄷ)  # code >= 0x30\n                                    (ㄱㅇㄱ ㄷㅈㄱ 작ㅎㄷ)  # code <= 0x39\n                                    곱ㅎㄷ\n                                더ㅎㄷㅎㄷ\n                            ㅎㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n                    ㅎㅎㄹ\n                하:기로 하다\n                def on_read_all(\n                    digits: bytes, stdin_buffer: bytes\n                ) -> IO[tuple[int, bytes]]\n                    [\n                        ㄱㅇㄱ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ 정수ㅎㄴ,\n                        ㄴㅇㄱ\n                    ] 목록ㅎㄷ 감싸ㅎㄴ\n                ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n            ㅎ\n\n            def print(data: str) -> IO[None]:\n                ㄴ(stdin) 출력('wb') 꺼내ㅎㄷ  # IO[File]\n                def on_open(stdout: File) -> IO[int]:\n                    ㄱㅇㄴ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # utf-8 bytes\n                    출력 ㄱㅇㄱㅎㄷ  # IO[int]\n                하:기로 하다\n                def on_print(_: int) -> IO[None]:\n                    빈값ㅎㄱ 감싸ㅎㄴ\n                하:기로 하다\n            ㅎ\n\n            def _(\n                push, pop, duplicate, swap, input_char, input_int, print\n            ) -> IO[tuple[int, int, list[list[int]], int, bytes]]:\n                try:\n                    ㄱㅇㄴ\n                    switch (choseong) {\n                    case 릉능긍(11):\n                        [ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ, ㅂㅇㄴ, ㅅㅇㄴ] 목록ㅎㅂ 감싸ㅎㄴ\n\n                    case 륻(3):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [sum(retrieved)])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴㅇㄱ (더 ㅁㅂㅎㄴ)ㅎㄴ,\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 므(4):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [prod(retrieved)])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴㅇㄱ (곱 ㅁㅂㅎㄴ)ㅎㄴ,\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 긑듵긑(16):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            first, second = retrieved\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [second - first])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴ ㄴㅇㄱㅎㄴ\n                                        ㄱ ㄴㅇㄱㅎㄴ ㄴㄱ 곱ㅎㄷ\n                                        더ㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 든(2):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            first, second = retrieved\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [second // first])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴ ㄴㅇㄱㅎㄴ ㄱ ㄴㅇㄱㅎㄴ 나누ㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 블(5):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            first, second = retrieved\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [second % first])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴ ㄴㅇㄱㅎㄴ ㄱ ㄴㅇㄱㅎㄴ 나머ㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n\n                    case 슴(6):\n                        # pop(stores, selected_fd, 1)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄴ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            if jongseong == IEUNG:\n                                ㄱ ㄴㅇㄱㅎㄴ 문자ㅎㄴ ㅅㅇㄴㅎㄴ\n                            else:\n                                if jongseong == HIEUH:\n                                    ㄱ ㄴㅇㄱㅎㄴ\n                                        (ㄴ ㅁ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # u32le\n                                        (ㄱ ㅁ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # utf32le\n                                    ㅅㅇㄴㅎㄴ\n                                else:\n                                    빈값ㅎㄱ 감싸ㅎㄴ\n                                <ㄴㅇㄷ 릏릏긓 ㄴㅎㄷ>ㅎㄷ\n                            <ㄴㅇㄷ 븡등긍 ㄴㅎㄷ>ㅎㄷ\n                            def on_print(_: None):\n                                [ㄷㅇㄹ, ㄹㅇㄹ, ㄱㅇㄴ, ㅂㅇㄹ, ㅅㅇㄹ] 목록ㅎㅂ 감싸ㅎㄴ\n                            하:기로 하다\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 즙(7):\n                        def wrap(value: int) -> IO[tuple[int, bytes]]:\n                            [ㄱㅇㄱ, ㅅㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                        ㅎ\n                        def _(wrap):\n                            ㄴㅇㄷ\n                            [\n                                그 ㄱㅇㄱㅎㄴ, 득 ㄱㅇㄱㅎㄴ, 믂 ㄱㅇㄱㅎㄴ, 믃 ㄱㅇㄱㅎㄴ,\n                                든 ㄱㅇㄱㅎㄴ, 븑 ㄱㅇㄱㅎㄴ, 븒 ㄱㅇㄱㅎㄴ, 륻 ㄱㅇㄱㅎㄴ,\n                                블 ㄱㅇㄱㅎㄴ, 즑 ㄱㅇㄱㅎㄴ, 늚늚긂 ㄱㅇㄱㅎㄴ,\n                                늛늛긃 ㄱㅇㄱㅎㄴ, 즔 ㄱㅇㄱㅎㄴ, 늝늝긅 ㄱㅇㄱㅎㄴ,\n                                늞늞긆 ㄱㅇㄱㅎㄴ, 긇늟긇 ㄱㅇㄱㅎㄴ, 믐 ㄱㅇㄱㅎㄴ,\n                                믑 ㄱㅇㄱㅎㄴ, 슶 ㄱㅇㄱㅎㄴ, 듯 ㄱㅇㄱㅎㄴ, 믔 ㄱㅇㄱㅎㄴ,\n                                ㅅㅇㄷ 븡응능흥능, 릊 ㄱㅇㄱㅎㄴ, 믗 ㄱㅇㄱㅎㄴ, 릌 ㄱㅇㄱㅎㄴ,\n                                믙 ㄱㅇㄱㅎㄴ, 믚 ㄱㅇㄱㅎㄴ, ㅅㅇㄷ 믛읗능흫늫,\n                            ] 목록ㅎㅁㄹㄱㅎㄴ\n                        ㅎㅎㄴ\n                        def on_value(value: int, stdin_buffer: bytes):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                ㅁㅇㄷ ㅂㅇㄷ [ㄱㅇㄱ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㄴㅇㄱ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n                    case 그느그(8):\n                        [\n                            ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ ㅂㅇㄴ ㄷㅇㄱㅎㄷ, ㅂㅇㄴ, ㅅㅇㄴ,\n                        ] 목록ㅎㅂ 감싸ㅎㄴ\n                    case 늪듶긒(17):\n                        [\n                            ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ ㅂㅇㄴ ㄹㅇㄱㅎㄷ, ㅂㅇㄴ, ㅅㅇㄴ,\n                        ] 목록ㅎㅂ 감싸ㅎㄴ\n\n                    case 늣늣긋(9):\n                        [ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ, ㄴㅇㄴ, ㅅㅇㄴ] 목록ㅎㅂ 감싸ㅎㄴ\n                    case 듰늤긌(10):\n                        # pop(stores, selected_fd, 1)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄴ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # new_stores = push(stores, jongseong, retrieved)\n                                ㄱㅇㄱ ㄴㅇㄷ ㄴㅇㄱ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n\n                    case 믖늦긎(12):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄱ(0) if second < first else ㄴ(1)\n                                    (ㄴ ㄴㅇㄱㅎㄴ)(ㄱ ㄴㅇㄱㅎㄴ)작ㅎㄷㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 슻늧긏(14):\n                        # pop(stores, selected_fd, 1)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄴ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            if retrieved[0] == 0:\n                                [\n                                    ㄷㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                    ㄹㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                    ㄱㅇㄱ,\n                                    ㅂㅇㄷ,\n                                    ㅅㅇㄷ,\n                                ] 목록ㅎㅂ 감싸ㅎㄴ\n                            else:\n                                [ㄷㅇㄷ, ㄹㅇㄷ, ㄱㅇㄱ, ㅂㅇㄷ, ㅅㅇㄷ] 목록ㅎㅂ 감싸ㅎㄴ\n                            ㄱ ㄴㅇㄱㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    } 사전ㅎㅁㄹㄱㅎㄴ\n                except (err):\n                    if KeyError:\n                        [ㄷㅇㄷ, ㄹㅇㄷ, ㅁㅇㄷ, ㅂㅇㄷ, ㅅㅇㄷ] 목록ㅎㅂ 감싸ㅎㄴ\n                    else:\n                        if Empty:\n                            [\n                                ㄷㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                ㄹㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                ㅁㅇㄷ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        else:\n                            ㄱㅇㄱ 던지ㅎㄴ\n                        (ㄱㅇㄱ 재다ㅎㄴ ㄴ ㄴㅎㄷ)(ㄱ ㄱㅇㄱㅎㄴ 모자람 ㄴㅎㄷ)곱ㅎㄷㅎㄷ\n                    (ㄱㅇㄱ 재다ㅎㄴ ㄷ ㄴㅎㄷ)(ㄱ ㄱㅇㄱㅎㄴ 평 ㄴㅎㄷ)(ㄴ ㄱㅇㄱㅎㄴ 못찾 ㄴㅎㄷ)곱ㅎㄹㅎㄷ\n                ㅎ:시도ㅎㄷ\n            ㅎㅎㅈ\n        ㅎ\n\n        def get_velocity(\n            jungseong: int, prev_x_speed: int, prev_y_speed: int\n        ) -> tuple[int, int]:\n            try:\n                ㄱㅇㄱ {\n                    가: [ㄴ(1), ㄱ(0)] 목록ㅎㄷ,\n                    댜: [ㄷ(2), ㄱ(0)] 목록ㅎㄷ,\n                    머: [ㄴㄱ(-1), ㄱ(0)] 목록ㅎㄷ,\n                    셔: [ㄷㄱ(-2), ㄱ(0)] 목록ㅎㄷ,\n                    고노고: [ㄱ(0), ㄴㄱ(-1)] 목록ㅎㄷ,\n                    묘뇨교: [ㄱ(0), ㄷㄱ(-2)] 목록ㅎㄷ,\n                    부누구: [ㄱ(0), ㄴ(1)] 목록ㅎㄷ,\n                    뉴듀규: [ㄱ(0), ㄷ(2)] 목록ㅎㄷ,\n                    드드그: [\n                        ㄴㅇㄱ  # prev_x_speed,\n                        ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_y_speed\n                    ] 목록ㅎㄷ,\n                    릐듸긔: [\n                        ㄴㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_x_speed,\n                        ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_y_speed,\n                    ] 목록ㅎㄷ,\n                    미디기: [\n                        ㄴㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_x_speed,\n                        ㄷㅇㄱ  # prev_y_speed,\n                    ] 목록ㅎㄷ,\n                } 사전ㅎㅅㄷㄱㅎㄴ[jungseong]\n            except (err):\n                # [prev_x_speed, prev_y_speed]\n                [ㄴㅇㄴ, ㄷㅇㄴ] 목록ㅎㄷ\n            ㅎ:시도ㅎㄷ\n        ㅎ\n\n        def read_table(x: int, y: int) -> tuple[int, int, int] | None:\n            if x < len(table[y]):\n                ㄱㅇㄱ(x) ㄴㅇㄱ(y) ㄱㅇㄴㅎㄴㅎㄴ\n            else:\n                빈값ㅎㄱ\n            ㄱㅇㄱ(x) (ㄴㅇㄱ(y) ㄱㅇㄴㅎㄴ 재다ㅎㄴ) 작ㅎㄷㅎㄷ\n        ㅎ\n\n        def move(x: int, y: int, x_speed: int, y_speed: int) -> tuple[int, int]:\n            def wrap(pos: int, length: int) -> int:\n                if length == 0:\n                    ㄱㅇㄱ\n                else:\n                    ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷ ㄴㅇㄱ 나머ㅎㄷ\n                ㄴㅇㄱ ㄱ ㄴㅎㄷㅎㄷ\n            ㅎ\n            def _(wrap) -> tuple[int, int]:\n                if x_speed == 0:  # don't wrap both at the same time\n                    # [x, wrap(y + y_speed, len(table))]\n                    [ㄱㅇㄴ, ㄴㅇㄴ ㄹㅇㄴ 더ㅎㄷ ㄱㅇㄷ 재다ㅎㄴ ㄱㅇㄱㅎㄷ] 목록ㅎㄷ\n                else:\n                    # [wrap(x + x_speed, len(table[y])), y]\n                    [ㄱㅇㄴ ㄷㅇㄴ 더ㅎㄷ ㄴㅇㄴ ㄱㅇㄷㅎㄴ 재다ㅎㄴ ㄱㅇㄱㅎㄷ, ㄴㅇㄴ] 목록ㅎㄷ\n                ㄷㅇㄴ ㄱ ㄴㅎㄷㅎㄷ\n            ㅎㅎㄴ\n        ㅎ\n\n        def _(\n            execute: (int, int, int, int, list[list[int]], int, bytes)\n                -> IO[tuple[int, int, int, int, bytes]],\n            get_velocity: (int, int, int) -> tuple[int, int],\n            read_table: (int, int) -> tuple[int, int, int] | None,\n            move: (int, int, int) -> int,\n        ) -> IO[int]:\n            ㄱ(0)\n            ㄱ(0)\n            ㄱ(0)\n            ㄴ(1)\n            [\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, # TODO(dragonteros): pipe??\n            ] 목록ㅎㄹㄹㄱ\n            ㄱ(0)\n            문자ㅎㄱ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ\n            def main_loop(\n                x: int,\n                y: int,\n                x_speed: int,\n                y_speed: int,\n                stores: list[list[int]],\n                selected_fd: int,\n                stdin_buffer: bytes,\n            ) -> IO[NoReturn]:\n                ㄱㅇㄱ(x) ㄴㅇㄱ(y) ㄷㅇㄴㅎㄷ  # read_table(x, y)\n                def _(\n                    cell: tuple[int, int, int] | None\n※              ) -> IO[tuple[int, int, list[list[int]], int, bytes]]:\naheui               if cell is None:\npolyglot                [ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ, ㅂㅇㄴ, ㅅㅇㄴ] 목록ㅎㅂ 감싸ㅎㄴ \nstarts              else:\nhere                    if choseong == HIEUH:\n↓                          # NOTE: on_resolve expects an IO so wrap it\n빈ㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣ값 ㅎㄱ 감싸ㅎㄴ\n                            def quit(_: None) -> NoReturn:\n                                종료코드\n                                ㄱ(0) if not stores[selected_fd] else\n                                    ㄱ(0) ㄴㄱ(-1) (ㅂㅇㄷ 븡등긍(21) ㄴㅎㄷ)ㅎㄷ\n                                    ㅂㅇㄷ ㅁㅇㄷㅎㄴㅎㄴ  # stores[selected_fd]\n                                (ㅂㅇㄷ ㅁㅇㄷㅎㄴ 재다ㅎㄴ ㄱ(0) ㄴㅎㄷ)ㅎㄷ\n                                뜻밖ㅎㄷ 던지ㅎㄴ  # raise exit_code\n                            하:기로 하다\n                        else:\n                            [ㄱ ㄱㅇㄱㅎㄴ, ㄷ ㄱㅇㄱㅎㄴ] 목록ㅎㄷ  # [cho, jong]\n                            ㄴ ㄱㅇㄱㅎㄴ ㄷㅇㄴ ㄹㅇㄴ ㄴㅇㄷㅎㄹ  # get_velocity\n                            [\n믕ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅇㄴ,\n                                ㅂㅇㄴ,\n                            ㅅㅇㄴ] 목록ㅎㄹ\n                            더ㅎㄹ\n                            ㄱㅇㄷ ㅁㅂㅎㄴㅎㄴ\n                        ㄱ ㄱㅇㄱㅎㄴ 듷듷긓(18) ㄴㅎㄷㅎㄷ\n                    ㄱㅇㄱ 빈값ㅎㄱ ㄴㅎㄷㅎㄷ\n                ㅎㅎㄴ\n\n                def on_resolve(\n                    new_x_speed, new_y_speed, new_stores, new_fd, new_buffer\n                ):\n                    ㄱㅇㄴ ㄴㅇㄴ ㄱㅇㄱ ㄴㅇㄱ ㄹㅇㄷㅎㅁ  # move(x, y, ...)\n                        [ㄱㅇㄱ, ㄴㅇㄱ, ㄷㅇㄱ, ㄹㅇㄱ, ㅁㅇㄱ] 목록ㅎㅂ 더ㅎㄷ\n                    (ㄴㅇ ㅁㅂㅎㄴ)ㅎㄴ\n                ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n            ㅎㅎㅈ\n\n            def on_resolve():\n                도달불가 뜻밖ㅎㄴ 던지ㅎㄴ  # should never happen\n            ㅎ\n            def on_reject(err):\n                if ErrorCode:\n                    ㄴ ㄱㅇㄱㅎㄴ 감싸ㅎㄴ\n                else:\n                    ㄱㅇㄱ 던지ㅎㄴ\n                (ㄱㅇㄱ 재다ㅎㄴ ㄷ ㄴㅎㄷ) && (ㄱ ㄱㅇㄱㅎㄴ 종료코드 ㄴㅎㄷ) 곱ㅎㄷㅎㄷ\n            ㅎ:ㄱㄹㅎㄹ\n        ㅎㅎㅁ\n    하:기로 하다\n희ㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢ\n↑\naheui\npolyglot\nends\nhere\n※"],y=["\"\"\"Aheui interpreter in Unsuspected Hangeul\n\nIt passes all the standard aheui test set, although 'loop' takes very much time.\n\nNote that this code is also an Aheui program, making it a polyglot of Aheui and\nUnsuspected Hangeul.\n\nUsage (Python backend):\n    $ python -m pbhhg_py.cli <path to this file> <path to some aheui file>\n\nUsage (Node.js backend)\n    $ node pbhhg_js/cli <path to this file> <path to some aheui file>\n\"\"\"\n\ndef aheui(filepath: str) -> IO[int]:\n    ㄱㅇㄱ ㄹ(rb) 꺼내ㅎㄷ  # IO[File['rb']]\n\n    def with_file(file: File) -> IO[bytes]:\n        ㄴㄱ(all) ㄹ ㄱㅇㄱㅎㄷ\n    하:기로 하다  # IO[bytes]\n\n    def on_read(content: bytes) -> IO[list[str]]:\n        ㄱㅇㄱ  # bytes\n            ㅂㄴㄱㅂㄱ (ㄴ ㄷ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b'\\r\\n'\n            분리ㅎㄷ  # list[bytes]\n            ㄷㄴㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b'\\n'\n            꿰매ㅎㄷ  # bytes\n            ㄷㄴㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b'\\n'\n            분리ㅎㄷ  # list[bytes]\n        (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ) # utf8 bytes -> str\n        ㅁㄷㅎㄷ 감싸ㅎㄴ  # IO[list[str]]\n    하:기로 하다\n\n    def into_table(lines: list[str]) -> IO[list[list[tuple | None]]]:\n        def convert(character: str) -> tuple[int, int, int] | None:\n            def is_hangeul_syllable(code: int) -> bool:\n                ㅈㅈㅈㅂㄷㄴㄱ ㄱㅇㄱ 작ㅎㄷ  # code >= 0xAC00\n                ㄱㅇㄱ ㅁㅁㅅㄹㅂㄴㄱ 작ㅎㄷ  # code <= 0xDCA3\n                곱ㅎㄷ\n            ㅎ\n\n            def split_hangeul_syllable(code: int) -> tuple[int, int, int]:\n                ㄱㅇㄱ ㄱㄱㄳㄷㄴ 더ㅎㄷ  # index = code - 0xAC00\n                def _(index: int) -> tuple[int, int, int]:\n                    [\n                        ㄱㅇㄱ ㅁㄴㄴㄴㄱ(588) 나누ㅎㄷ,\n                        ㄱㅇㄱ ㅁㄴㄴㄴㄱ(588) 나머ㅎㄷ ㅁㄹㄱ(28) 나누ㅎㄷ,\n                        ㄱㅇㄱ ㅁㄹㄱ(28) 나머ㅎㄷ\n                    ]\n                    목록ㅎㄹ\n                ㅎㅎㄴ\n            ㅎ\n\n            def _(is_hangeul_syllable, split_hangeul_syllable):\n                ㄱㅇㄴ\n                    (ㄱ ㄷ 가짜ㅎㄱ <평 바꾸기 ㅂㅎㄷ>ㅎㄹ)ㅎㄴ  # utf-16\n                    (ㄴ ㄷ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # uint 16\n                def _(code: int) -> tuple[int, int, int] | None:\n                    if is_hangeul_syllable(code):\n                        # return split_hangeul_syllable(code)\n                        ㄱㅇㄱ ㄴㅇㄴㅎㄴ\n                    else:\n                        빈값ㅎㄱ\n                    ㄱㅇㄱ ㄱㅇㄴㅎㄴㅎㄷ\n                ㅎㅎㄴ\n            ㅎㅎㄷ\n        ㅎ\n\n        def _(convert: Callable[[str], tuple | None]) -> IO[list[list[tuple | None]]]:\n            ㄱㅇㄴ\n            def _(line: str) -> list[tuple | None]:\n                ㄱㅇㄱ 분리ㅎㄴ ㄱㅇㄴ ㅁㄷㅎㄷ\n            ㅎ:ㅁㄷㅎㄷ 감싸ㅎㄴ\n        ㅎㅎㄴ\n    하:기로 하다  # program <- IO[list[list[tuple[int, int, int] | None]]\n\n    def on_program(\n        program: list[list[tuple[int, int, int] | None]],\n    ) -> IO[int]:\n        # state = (program, x, y, x_speed, y_speed, stores, selected_fd, stdin_buffer)\n\n        def execute(\n            choseong: int,\n            jongseong: int,\n            x_speed: int,\n            y_speed: int,\n            stores: list[list[int]],\n            selected_fd: int,\n            stdin_buffer: bytes,\n        ) -> IO[tuple[int, int, list[list[int]], int, bytes]]:\n\n            def push(\n                stores: list[list[int]],\n                fd: int,\n                values: list[int],  # first thing first\n            ) -> list[list[int]]:\n                ㄱㅇㄱ ㄱ(0) ㄴㅇㄱ 발췌ㅎㄹ  # stores[:fd]\n                if fd == QUEUE:\n                    # values + stores[fd]\n                    ㄷㅇㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) 더ㅎㄷ\n                else:\n                    # stores[fd] + values\n                    (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) ㄷㅇㄱ 더ㅎㄷ\n                (ㄴㅇㄱ 븡등긍 ㄴㅎㄷ)ㅎㄷ 목록ㅎㄴ\n                ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ  # stores[fd + 1:]\n                ㄷㅎㄹ\n            ㅎ\n\n            def pop(\n                stores: list[list[int]],\n                fd: int,\n                count: int,\n            ) -> tuple[list[list[int]], list[int]]:  # first thing first\n                if len(stores[fd]) < count:\n                    모자람 뜻밖ㅎㄴ 던지ㅎㄴ\n                else:\n                    [\n                        ㄱㅇㄱ ㄱ ㄴㅇㄱ 발췌ㅎㄹ\n                        # stores[fd][:-count]\n                        (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) ㄱ (ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ) 발췌ㅎㄹ 목록ㅎㄴ\n                        ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ\n                        ㄷㅎㄹ,\n\n                        # stores[fd][-1:-1-count:-1]\n                        (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)\n                            ㄴㄱ (ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ ㄴㄱ 더ㅎㄷ) ㄴㄱ 발췌ㅎㅁ\n                    ] 목록ㅎㄷ\n                ㄴㅇㄱ ㄱㅇㄱㅎㄴ 재다ㅎㄴ ㄷㅇㄱ 작ㅎㄷㅎㄷ\n            ㅎ\n\n            def duplicate(\n                stores: list[list[int]],\n                fd: int,\n            ) -> list[list[int]]:\n                if not stores[fd]:\n                    모자람 뜻밖ㅎㄴ 던지ㅎㄴ\n                else:\n                    ㄱㅇㄱ ㄱ ㄴㅇㄱ 발췌ㅎㄹ  # stores[:fd]\n                    (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)\n                        [ㄴㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)ㅎㄴ] 목록ㅎㄴ\n                        더ㅎㄷ 목록ㅎㄴ\n                    ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ  # stores[fd + 1:]\n                    ㄷㅎㄹ\n                ㄴㅇㄱ ㄱㅇㄱㅎㄴ 재다ㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n            ㅎ\n\n            def swap(\n                stores: list[list[int]],\n                fd: int,\n            ) -> list[list[int]]:\n                if len(stores[fd]) < 2:\n                    모자람 뜻밖ㅎㄴ 던지ㅎㄴ\n                else:\n                    ㄱㅇㄱ ㄱ ㄴㅇㄱ 발췌ㅎㄹ  # stores[:fd]\n                    (ㄴㅇㄱ ㄱㅇㄱㅎㄴ) ㄱ ㄷㄱ 발췌ㅎㄹ  # stores[fd][:-2]\n                        [\n                            ㄴㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)ㅎㄴ,  # stores[fd][-1]\n                            ㄷㄱ (ㄴㅇㄱ ㄱㅇㄱㅎㄴ)ㅎㄴ,  # stores[fd][-2]\n                        ] 목록ㅎㄷ 더ㅎㄷ\n                    목록ㅎㄴ\n                    ㄱㅇㄱ (ㄴㅇㄱ ㄴ ㄷㅎㄷ) 발췌ㅎㄷ  # stores[fd + 1:]\n                    ㄷㅎㄹ\n                ㄴㅇㄱ ㄱㅇㄱㅎㄴ 재다ㅎㄴ ㄷ 작ㅎㄷㅎㄷ\n            ㅎ\n\n            def input_char(stdin_buffer: bytes) -> IO[tuple[int, bytes]]:\n                ㄱ(stdin) ㄹ('rb') 꺼내ㅎㄷ  # IO[File]\n                def on_open(stdin: File) -> IO[bytes, bytes]:\n                    if len(stdin_buffer) == 0:\n                        ㄴ(1) ㄹ ㄱㅇㄱㅎㄷ  # IO[bytes]\n                        def on_raw_read(character: bytes) -> IO[tuple]:\n                            [ㄱㅇㄱ, ㄱㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                        하:기로 하다\n                    else:\n                        [ㄱ ㄱㅇㄴㅎㄴ, ㄱㅇㄴ ㄴ 발췌ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                    ㄱㅇㄴ 재다ㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n                    def on_read_first(\n                        first_byte: bytes, stdin_buffer: bytes\n                    ) -> IO[bytes]:  # need to change this func\n                        ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ\n                        def count_remaining_bytes(first_code: int) -> int:\n                            ㄱ(0) if first_code < 0x80 else\n                                ㄴ(2) if first_code < 0xE0 else\n                                    ㄷ(3) if first_code < 0xF0 else\n                                        ㄹ(4)\n                                    ㄱㅇㄱ ㄱㅅㄹ 작ㅎㄷㅎㄷ\n                                ㄱㅇㄱ ㄱㅁㄹ 작ㅎㄷㅎㄷ\n                            ㄱㅇㄱ ㄱㄱㄷ 작ㅎㄷㅎㄷ\n                        ㅎㅎㄴ\n                        def read_remaining_bytes(\n                            num_remaining_bytes: int\n                        ) -> IO[tuple[bytes, bytes]]:\n                            ㄱㅇㄱ ㄴㄱ ㄴㅇㄴ 재다ㅎㄴ 곱ㅎㄷ 더ㅎㄷ\n                            def fill_buffer(\n                                deficit: int\n                            ) -> IO[bytes]:\n                                if deficit > 0:\n                                    ㄱㅇㄱ ㄹ ㄱㅇㄹㅎㄷ\n                                    def on_read_supplement(supplement: bytes):\n                                        ㄴㅇㄹ ㄱㅇㄱ 더ㅎㄷ 감싸ㅎㄴ\n                                    하:기로 하다\n                                else:\n                                    ㄴㅇㄷ 감싸ㅎㄴ\n                                ㄱ ㄱㅇㄱ 작ㅎㄷㅎㄷ\n                            ㅎㅎㄴ\n                            def on_fill_buffer(\n                                stdin_buffer: bytes\n                            ) -> IO[tuple[bytes, bytes]]:\n                                [\n                                    ㄱㅇㄷ ㄱㅇㄱ ㄱ ㄱㅇㄴ 발췌ㅎㄹ 더ㅎㄷ,\n                                    ㄱㅇㄱ ㄱㅇㄴ 발췌ㅎㄷ,\n                                ] 목록ㅎㄷ 감싸ㅎㄴ\n                            하:기로 하다\n                        ㅎㅎㄴ\n                    ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n                하:기로 하다\n                def on_read_all(\n                    character: bytes, stdin_buffer: bytes\n                ) -> IO[tuple[int, bytes]]:\n                    [\n                        ㄱㅇㄱ\n                            (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # utf8 to str\n                            (ㄱ ㅁ 가짜ㅎㄱ <평 바꾸기 ㅂㅎㄷ>ㅎㄹ)ㅎㄴ  # str to utf32le\n                            (ㄴ ㅁ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ,  # utf32le to uint32\n                        ㄴㅇㄱ\n                    ] 목록ㅎㄷ 감싸ㅎㄴ\n                ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n            ㅎ\n\n            def input_int(stdin_buffer: bytes) -> IO[tuple[int, bytes]]:\n                ㄱ(stdin) ㄹ('rb') 꺼내ㅎㄷ  # IO[File]\n                def on_open(file: File) -> IO[bytes]:\n                    문자ㅎㄱ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # b''\n                    진짜ㅎㄱ\n                    ㄱㅇㄴ\n                    def read_digits(\n                        digits: bytes, is_first: bool, stdin_buffer: bytes\n                    ) -> IO[tuple[bytes, bytes]]:\n                        if len(stdin_buffer) == 0:\n                            ㄴ(1) ㄹ ㄱㅇㄴㅎㄷ  # IO[bytes]\n                            def on_raw_read(character: bytes) -> IO[tuple]:\n                                if character == b'\\r':\n                                    ㄴ(1) ㄹ ㄱㅇㄷㅎㄷ  # IO[bytes]\n                                    def on_more_raw_read(character: bytes):\n                                        if character == b'\\n':\n                                            [ㄱㅇㄱ, ㄷㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                        else:  # just keep it\n                                            [ㄱㅇㄴ, ㄱㅇㄱ ㄷㅇㄷ 더ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                        ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ ㄷㄴㄱ ㄴㅎㄷㅎㄷ\n                                    하:기로 하다\n                                else:\n                                    [ㄱㅇㄱ, ㄷㅇㄴ] 목록ㅎㄷ 감싸ㅎㄴ\n                                ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ ㅂㄴㄱ ㄴㅎㄷㅎㄷ\n                            하:기로 하다\n                        else:\n                            [ㄱ ㄱㅇㄱㅎㄴ, ㄱㅇㄱ ㄴ 발췌ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                        ㄷㅇㄱ 재다ㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n                        def on_read(\n                            character: bytes, stdin_buffer: bytes\n                        ) -> IO[tuple[bytes, bytes]]:\n                            ㄱㅇㄱ (ㄴ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ\n                            def _(code: int) -> IO[tuple[bytes, bytes]]:\n                                if is_sign_or_digit(code):\n                                    (ㄱㅇㄷ ㄱㅇㄴ 더ㅎㄷ) 가짜ㅎㄱ ㄷㅇㄷ ㄷㅇㅎㄹ\n                                else:\n                                    if character in b' \\t\\n':\n                                        # discard \\`character\\` and return\n                                        [ㄱㅇㄷ, ㄷㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                    else:\n                                        [ㄱㅇㄷ, ㄱㅇㄴ ㄷㅇㄷ 더ㅎㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                                    (ㄱㅇㄱ ㄱㅁㄱ ㄴㅎㄷ)  # b' '\n                                    || (ㄱㅇㄱ ㄴㄴㄱ ㄴㅎㄷ)  # b'\\t'\n                                    || (ㄱㅇㄱ ㄷㄴㄱ ㄴㅎㄷ)  # b'\\n'\n                                    더ㅎㄹㅎㄷ\n                                ㄴㅇㄷ  # is_first\n                                    (ㄱㅇㄱ ㅂㅂㄱ ㄴㅎㄷ)  # b'+'\n                                    (ㄱㅇㄱ ㄹㅂㄱ ㄴㅎㄷ)  # b'-'\n                                    더ㅎㄷ\n                                곱ㅎㄷ\n                                    (ㅈㅂㄱ ㄱㅇㄱ 작ㅎㄷ)  # code >= 0x30\n                                    (ㄱㅇㄱ ㄷㅈㄱ 작ㅎㄷ)  # code <= 0x39\n                                    곱ㅎㄷ\n                                더ㅎㄷㅎㄷ\n                            ㅎㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n                    ㅎㅎㄹ\n                하:기로 하다\n                def on_read_all(\n                    digits: bytes, stdin_buffer: bytes\n                ) -> IO[tuple[int, bytes]]\n                    [\n                        ㄱㅇㄱ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ 정수ㅎㄴ,\n                        ㄴㅇㄱ\n                    ] 목록ㅎㄷ 감싸ㅎㄴ\n                ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n            ㅎ\n\n            def print(data: str) -> IO[None]:\n                ㄴ(stdin) 출력('wb') 꺼내ㅎㄷ  # IO[File]\n                def on_open(stdout: File) -> IO[int]:\n                    ㄱㅇㄴ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # utf-8 bytes\n                    출력 ㄱㅇㄱㅎㄷ  # IO[int]\n                하:기로 하다\n                def on_print(_: int) -> IO[None]:\n                    빈값ㅎㄱ 감싸ㅎㄴ\n                하:기로 하다\n            ㅎ\n\n            def _(\n                push, pop, duplicate, swap, input_char, input_int, print\n            ) -> IO[tuple[int, int, list[list[int]], int, bytes]]:\n                try:\n                    ㄱㅇㄴ\n                    switch (choseong) {\n                    case 릉능긍(11):\n                        [ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ, ㅂㅇㄴ, ㅅㅇㄴ] 목록ㅎㅂ 감싸ㅎㄴ\n\n                    case 륻(3):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [sum(retrieved)])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴㅇㄱ (더 ㅁㅂㅎㄴ)ㅎㄴ,\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 므(4):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [prod(retrieved)])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴㅇㄱ (곱 ㅁㅂㅎㄴ)ㅎㄴ,\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 긑듵긑(16):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            first, second = retrieved\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [second - first])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴ ㄴㅇㄱㅎㄴ\n                                        ㄱ ㄴㅇㄱㅎㄴ ㄴㄱ 곱ㅎㄷ\n                                        더ㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 든(2):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            first, second = retrieved\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [second // first])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴ ㄴㅇㄱㅎㄴ ㄱ ㄴㅇㄱㅎㄴ 나누ㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 블(5):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            first, second = retrieved\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # push(new_stores, selected_fd, [second % first])\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄴ ㄴㅇㄱㅎㄴ ㄱ ㄴㅇㄱㅎㄴ 나머ㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n\n                    case 슴(6):\n                        # pop(stores, selected_fd, 1)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄴ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            if jongseong == IEUNG:\n                                ㄱ ㄴㅇㄱㅎㄴ 문자ㅎㄴ ㅅㅇㄴㅎㄴ\n                            else:\n                                if jongseong == HIEUH:\n                                    ㄱ ㄴㅇㄱㅎㄴ\n                                        (ㄴ ㅁ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # u32le\n                                        (ㄱ ㅁ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ  # utf32le\n                                    ㅅㅇㄴㅎㄴ\n                                else:\n                                    빈값ㅎㄱ 감싸ㅎㄴ\n                                <ㄴㅇㄷ 릏릏긓 ㄴㅎㄷ>ㅎㄷ\n                            <ㄴㅇㄷ 븡등긍 ㄴㅎㄷ>ㅎㄷ\n                            def on_print(_: None):\n                                [ㄷㅇㄹ, ㄹㅇㄹ, ㄱㅇㄴ, ㅂㅇㄹ, ㅅㅇㄹ] 목록ㅎㅂ 감싸ㅎㄴ\n                            하:기로 하다\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 즙(7):\n                        def wrap(value: int) -> IO[tuple[int, bytes]]:\n                            [ㄱㅇㄱ, ㅅㅇㄷ] 목록ㅎㄷ 감싸ㅎㄴ\n                        ㅎ\n                        def _(wrap):\n                            ㄴㅇㄷ\n                            [\n                                그 ㄱㅇㄱㅎㄴ, 득 ㄱㅇㄱㅎㄴ, 믂 ㄱㅇㄱㅎㄴ, 믃 ㄱㅇㄱㅎㄴ,\n                                든 ㄱㅇㄱㅎㄴ, 븑 ㄱㅇㄱㅎㄴ, 븒 ㄱㅇㄱㅎㄴ, 륻 ㄱㅇㄱㅎㄴ,\n                                블 ㄱㅇㄱㅎㄴ, 즑 ㄱㅇㄱㅎㄴ, 늚늚긂 ㄱㅇㄱㅎㄴ,\n                                늛늛긃 ㄱㅇㄱㅎㄴ, 즔 ㄱㅇㄱㅎㄴ, 늝늝긅 ㄱㅇㄱㅎㄴ,\n                                늞늞긆 ㄱㅇㄱㅎㄴ, 긇늟긇 ㄱㅇㄱㅎㄴ, 믐 ㄱㅇㄱㅎㄴ,\n                                믑 ㄱㅇㄱㅎㄴ, 슶 ㄱㅇㄱㅎㄴ, 듯 ㄱㅇㄱㅎㄴ, 믔 ㄱㅇㄱㅎㄴ,\n                                ㅅㅇㄷ 븡응능흥능, 릊 ㄱㅇㄱㅎㄴ, 믗 ㄱㅇㄱㅎㄴ, 릌 ㄱㅇㄱㅎㄴ,\n                                믙 ㄱㅇㄱㅎㄴ, 믚 ㄱㅇㄱㅎㄴ, ㅅㅇㄷ 믛읗능흫늫,\n                            ] 목록ㅎㅁㄹㄱㅎㄴ\n                        ㅎㅎㄴ\n                        def on_value(value: int, stdin_buffer: bytes):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                ㅁㅇㄷ ㅂㅇㄷ [ㄱㅇㄱ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㄴㅇㄱ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n                    case 그느그(8):\n                        [\n                            ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ ㅂㅇㄴ ㄷㅇㄱㅎㄷ, ㅂㅇㄴ, ㅅㅇㄴ,\n                        ] 목록ㅎㅂ 감싸ㅎㄴ\n                    case 늪듶긒(17):\n                        [\n                            ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ ㅂㅇㄴ ㄹㅇㄱㅎㄷ, ㅂㅇㄴ, ㅅㅇㄴ,\n                        ] 목록ㅎㅂ 감싸ㅎㄴ\n\n                    case 늣늣긋(9):\n                        [ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ, ㄴㅇㄴ, ㅅㅇㄴ] 목록ㅎㅂ 감싸ㅎㄴ\n                    case 듰늤긌(10):\n                        # pop(stores, selected_fd, 1)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄴ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                # new_stores = push(stores, jongseong, retrieved)\n                                ㄱㅇㄱ ㄴㅇㄷ ㄴㅇㄱ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n\n                    case 믖늦긎(12):\n                        # pop(stores, selected_fd, 2)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄷ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            [\n                                ㄷㅇㄷ,\n                                ㄹㅇㄷ,\n                                ㄱㅇㄱ ㅂㅇㄷ [\n                                    ㄱ(0) if second < first else ㄴ(1)\n                                    (ㄴ ㄴㅇㄱㅎㄴ)(ㄱ ㄴㅇㄱㅎㄴ)작ㅎㄷㅎㄷ\n                                ] 목록ㅎㄴ ㄱㅇㄴㅎㄹ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    case 슻늧긏(14):\n                        # pop(stores, selected_fd, 1)\n                        ㅁㅇㄴ ㅂㅇㄴ ㄴ ㄴㅇㄱㅎㄹ\n                        def _(new_stores: list[list[int]], retrieved: list[int]):\n                            if retrieved[0] == 0:\n                                [\n                                    ㄷㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                    ㄹㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                    ㄱㅇㄱ,\n                                    ㅂㅇㄷ,\n                                    ㅅㅇㄷ,\n                                ] 목록ㅎㅂ 감싸ㅎㄴ\n                            else:\n                                [ㄷㅇㄷ, ㄹㅇㄷ, ㄱㅇㄱ, ㅂㅇㄷ, ㅅㅇㄷ] 목록ㅎㅂ 감싸ㅎㄴ\n                            ㄱ ㄴㅇㄱㅎㄴ ㄱ ㄴㅎㄷㅎㄷ\n                        ㅎ:ㅁㅂㅎㄴㅎㄴ\n                    } 사전ㅎㅁㄹㄱㅎㄴ\n                except (err):\n                    if KeyError:\n                        [ㄷㅇㄷ, ㄹㅇㄷ, ㅁㅇㄷ, ㅂㅇㄷ, ㅅㅇㄷ] 목록ㅎㅂ 감싸ㅎㄴ\n                    else:\n                        if Empty:\n                            [\n                                ㄷㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                ㄹㅇㄷ ㄴㄱ ㄱㅎㄷ,\n                                ㅁㅇㄷ,\n                                ㅂㅇㄷ,\n                                ㅅㅇㄷ,\n                            ] 목록ㅎㅂ 감싸ㅎㄴ\n                        else:\n                            ㄱㅇㄱ 던지ㅎㄴ\n                        (ㄱㅇㄱ 재다ㅎㄴ ㄴ ㄴㅎㄷ)(ㄱ ㄱㅇㄱㅎㄴ 모자람 ㄴㅎㄷ)곱ㅎㄷㅎㄷ\n                    (ㄱㅇㄱ 재다ㅎㄴ ㄷ ㄴㅎㄷ)(ㄱ ㄱㅇㄱㅎㄴ 평 ㄴㅎㄷ)(ㄴ ㄱㅇㄱㅎㄴ 못찾 ㄴㅎㄷ)곱ㅎㄹㅎㄷ\n                ㅎ:시도ㅎㄷ\n            ㅎㅎㅈ\n        ㅎ\n\n        def get_velocity(\n            jungseong: int, prev_x_speed: int, prev_y_speed: int\n        ) -> tuple[int, int]:\n            try:\n                ㄱㅇㄱ {\n                    가: [ㄴ(1), ㄱ(0)] 목록ㅎㄷ,\n                    댜: [ㄷ(2), ㄱ(0)] 목록ㅎㄷ,\n                    머: [ㄴㄱ(-1), ㄱ(0)] 목록ㅎㄷ,\n                    셔: [ㄷㄱ(-2), ㄱ(0)] 목록ㅎㄷ,\n                    고노고: [ㄱ(0), ㄴㄱ(-1)] 목록ㅎㄷ,\n                    묘뇨교: [ㄱ(0), ㄷㄱ(-2)] 목록ㅎㄷ,\n                    부누구: [ㄱ(0), ㄴ(1)] 목록ㅎㄷ,\n                    뉴듀규: [ㄱ(0), ㄷ(2)] 목록ㅎㄷ,\n                    드드그: [\n                        ㄴㅇㄱ  # prev_x_speed,\n                        ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_y_speed\n                    ] 목록ㅎㄷ,\n                    릐듸긔: [\n                        ㄴㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_x_speed,\n                        ㄷㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_y_speed,\n                    ] 목록ㅎㄷ,\n                    미디기: [\n                        ㄴㅇㄱ ㄴㄱ 곱ㅎㄷ  # -prev_x_speed,\n                        ㄷㅇㄱ  # prev_y_speed,\n                    ] 목록ㅎㄷ,\n                } 사전ㅎㅅㄷㄱㅎㄴ[jungseong]\n            except (err):\n                # [prev_x_speed, prev_y_speed]\n                [ㄴㅇㄴ, ㄷㅇㄴ] 목록ㅎㄷ\n            ㅎ:시도ㅎㄷ\n        ㅎ\n\n        def read_table(x: int, y: int) -> tuple[int, int, int] | None:\n            if x < len(table[y]):\n                ㄱㅇㄱ(x) ㄴㅇㄱ(y) ㄱㅇㄴㅎㄴㅎㄴ\n            else:\n                빈값ㅎㄱ\n            ㄱㅇㄱ(x) (ㄴㅇㄱ(y) ㄱㅇㄴㅎㄴ 재다ㅎㄴ) 작ㅎㄷㅎㄷ\n        ㅎ\n\n        def move(x: int, y: int, x_speed: int, y_speed: int) -> tuple[int, int]:\n            def wrap(pos: int, length: int) -> int:\n                if length == 0:\n                    ㄱㅇㄱ\n                else:\n                    ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷ ㄴㅇㄱ 나머ㅎㄷ\n                ㄴㅇㄱ ㄱ ㄴㅎㄷㅎㄷ\n            ㅎ\n            def _(wrap) -> tuple[int, int]:\n                if x_speed == 0:  # don't wrap both at the same time\n                    # [x, wrap(y + y_speed, len(table))]\n                    [ㄱㅇㄴ, ㄴㅇㄴ ㄹㅇㄴ 더ㅎㄷ ㄱㅇㄷ 재다ㅎㄴ ㄱㅇㄱㅎㄷ] 목록ㅎㄷ\n                else:\n                    # [wrap(x + x_speed, len(table[y])), y]\n                    [ㄱㅇㄴ ㄷㅇㄴ 더ㅎㄷ ㄴㅇㄴ ㄱㅇㄷㅎㄴ 재다ㅎㄴ ㄱㅇㄱㅎㄷ, ㄴㅇㄴ] 목록ㅎㄷ\n                ㄷㅇㄴ ㄱ ㄴㅎㄷㅎㄷ\n            ㅎㅎㄴ\n        ㅎ\n\n        def _(\n            execute: (int, int, int, int, list[list[int]], int, bytes)\n                -> IO[tuple[int, int, int, int, bytes]],\n            get_velocity: (int, int, int) -> tuple[int, int],\n            read_table: (int, int) -> tuple[int, int, int] | None,\n            move: (int, int, int) -> int,\n        ) -> IO[int]:\n            ㄱ(0)\n            ㄱ(0)\n            ㄱ(0)\n            ㄴ(1)\n            [\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ, 목록ㅎㄱ,\n                목록ㅎㄱ, 목록ㅎㄱ, # TODO(dragonteros): pipe??\n            ] 목록ㅎㄹㄹㄱ\n            ㄱ(0)\n            문자ㅎㄱ (ㄱ ㄴ <평 바꾸기 ㅂㅎㄷ>ㅎㄷ)ㅎㄴ\n            def main_loop(\n                x: int,\n                y: int,\n                x_speed: int,\n                y_speed: int,\n                stores: list[list[int]],\n                selected_fd: int,\n                stdin_buffer: bytes,\n            ) -> IO[NoReturn]:\n                ㄱㅇㄱ(x) ㄴㅇㄱ(y) ㄷㅇㄴㅎㄷ  # read_table(x, y)\n                def _(\n                    cell: tuple[int, int, int] | None\n※              ) -> IO[tuple[int, int, list[list[int]], int, bytes]]:\naheui               if cell is None:\npolyglot                [ㄷㅇㄴ, ㄹㅇㄴ, ㅁㅇㄴ, ㅂㅇㄴ, ㅅㅇㄴ] 목록ㅎㅂ 감싸ㅎㄴ \nstarts              else:\nhere                    if choseong == HIEUH:\n↓                          # NOTE: on_resolve expects an IO so wrap it\n빈ㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣㅣ값 ㅎㄱ 감싸ㅎㄴ\n                            def quit(_: None) -> NoReturn:\n                                종료코드\n                                ㄱ(0) if not stores[selected_fd] else\n                                    ㄱ(0) ㄴㄱ(-1) (ㅂㅇㄷ 븡등긍(21) ㄴㅎㄷ)ㅎㄷ\n                                    ㅂㅇㄷ ㅁㅇㄷㅎㄴㅎㄴ  # stores[selected_fd]\n                                (ㅂㅇㄷ ㅁㅇㄷㅎㄴ 재다ㅎㄴ ㄱ(0) ㄴㅎㄷ)ㅎㄷ\n                                뜻밖ㅎㄷ 던지ㅎㄴ  # raise exit_code\n                            하:기로 하다\n                        else:\n                            [ㄱ ㄱㅇㄱㅎㄴ, ㄷ ㄱㅇㄱㅎㄴ] 목록ㅎㄷ  # [cho, jong]\n                            ㄴ ㄱㅇㄱㅎㄴ ㄷㅇㄴ ㄹㅇㄴ ㄴㅇㄷㅎㄹ  # get_velocity\n                            [\n믕ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅇㄴ,\n                                ㅂㅇㄴ,\n                            ㅅㅇㄴ] 목록ㅎㄹ\n                            더ㅎㄹ\n                            ㄱㅇㄷ ㅁㅂㅎㄴㅎㄴ\n                        ㄱ ㄱㅇㄱㅎㄴ 듷듷긓(18) ㄴㅎㄷㅎㄷ\n                    ㄱㅇㄱ 빈값ㅎㄱ ㄴㅎㄷㅎㄷ\n                ㅎㅎㄴ\n\n                def on_resolve(\n                    new_x_speed, new_y_speed, new_stores, new_fd, new_buffer\n                ):\n                    ㄱㅇㄴ ㄴㅇㄴ ㄱㅇㄱ ㄴㅇㄱ ㄹㅇㄷㅎㅁ  # move(x, y, ...)\n                        [ㄱㅇㄱ, ㄴㅇㄱ, ㄷㅇㄱ, ㄹㅇㄱ, ㅁㅇㄱ] 목록ㅎㅂ 더ㅎㄷ\n                    (ㄴㅇ ㅁㅂㅎㄴ)ㅎㄴ\n                ㅎ:ㅁㅂㅎㄴ:ㄱㄹㅎㄷ\n            ㅎㅎㅈ\n\n            def on_resolve():\n                도달불가 뜻밖ㅎㄴ 던지ㅎㄴ  # should never happen\n            ㅎ\n            def on_reject(err):\n                if ErrorCode:\n                    ㄴ ㄱㅇㄱㅎㄴ 감싸ㅎㄴ\n                else:\n                    ㄱㅇㄱ 던지ㅎㄴ\n                (ㄱㅇㄱ 재다ㅎㄴ ㄷ ㄴㅎㄷ) && (ㄱ ㄱㅇㄱㅎㄴ 종료코드 ㄴㅎㄷ) 곱ㅎㄷㅎㄷ\n            ㅎ:ㄱㄹㅎㄹ\n        ㅎㅎㅁ\n    하:기로 하다\n희ㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢㅢ\n↑\naheui\npolyglot\nends\nhere\n※"],y||(y=h.slice(0)),p=Object.freeze(Object.defineProperties(h,{raw:{value:Object.freeze(y)}}))))},{id:"3",name:"문자만드는평범코드드립니다.pbhhg",location:"./조각글/문자만드는평범코드드립니다.pbhhg",fileType:"File",isLeaf:!0,data:"import (ㅂ ㅂ ㅂㅎㄷ)  # bytes codec\nimport (조각글 평범숫자 ㅂㅎㄷ)\n\nㅀㄱ  # Input string!\n\n[ def pbhhg_code_that_generates_given_string(string):\n    encoded_bytes = ㄱㅇㄱ (ㄱ ㄴ ㄱㅇㄴㄱㅎㄷ)ㅎㄴ\n    table = [\n        ㄱㅂㄱㄱㄱㅁㄱㄷㄴㅅㄱㄱㄷㄱㄱㄱㄷㄱㅂㄱㄹㄱㄱㄴㄱㄱㄱㄴㅁㄷㅁㄴㅅㄴㅂㄱㄹㅅㅂㄴㄴㅅㅁㅁㄷㄱㄱㄱㄱㅁㄱ (ㄴ ㅁㄷㄱ ㄱㅇㄴㄱㅎㄷ)ㅎㄴ,\n        ㄱㅁㄱㄱㄱㄱㄷㄴㄱㄱㄱㄷㄹㄷㅁㄴㄱㅁㄱ (ㄴ ㄱㄴㄱ ㄱㅇㄴㄱㅎㄷ)ㅎㄴ,\n        ㄱㅁㄱㄱㄱㄷㅁㄴㄴㅅㅁㄹㅁㄷㅁㄴㄴㅅㅁㄱㄹㅁㄹㄷㄴㅅㅁㄹㄹㄷㅁㄴㄴㅂㄱㄱㄱㅁㄹㄷㄴㅅㄱㄷㄹㄷㅁㄴㄱㅁㄱㄱㄱㄱㄷㄴㄱㄱㅁㄱㄹㄷㅁㄴㄱㅁㄱㄱㄱㄱㅂㄴㄴㅅㄱㄱㄷㄱㄱㄱㄴㅅㅁㄱㄹㅅㄴㄷㄴㅅㅁㄱㄹㄷㅁㄴㅅㄴㅂㄱㄹㅅㅂㄴㄴㅅㅁㅁㄷㄱㄱㄱㅅㄴㅂㄱㄹㄱㅂㄴㄴㅅㄱㄱㄷㄱㄱㄱㅅㄴㅂㄱㄹㅁㄹㄷㄴㅅㄱㄷㄹㄷㅁㄴㄱ (ㄴ ㅅㅅㄱ ㄱㅇㄴㄱㅎㄷ)ㅎㄴ\n    ㅁㅀㄹ] (ㄱ ㄷ ㄱㅇㄴㄱㅎㄷ) ㅁㄷㅎㄷ\n    [ def subprocedure(encoded_bytes, table):\n        ㄱ ㄴㅇㄱ ㅎㄴ  # table[0]\n        ㄱㅇㄱ (ㄴ ㄱ ㄱㅇㄴㄱㅎㄷ)ㅎㄴ ㄴㅇㄴㄱㅎㄴ  # for string\n        ㄴ ㄴㅇㄱ ㅎㄴ  # table[1]\n        ㄱㅇㄱ ㅈㄷㅎㄴ ㄴㅇㄴㄱㅎㄴ  # for len(encoded_bytes)\n        ㄷ ㄴㅇㄱ ㅎㄴ  # table[2]\n        ㄷㅎㅂ\n    ㅎ]\n    ㅎㄷ ㄱㅅㅎㄴ # IO(subprocedure(encoded_bytes, table))\nㅎ]\n\nㄱㅀㄷ\n출력\nㄱㅀㄷ\n\nㅎㅎㄷ  # /import"},{id:"4",name:"빠른정렬.pbhhg",location:"./조각글/빠른정렬.pbhhg",fileType:"File",isLeaf:!0,data:"[ def quick_sort (arr):\n  # if len(arr) > 0:\n    ㄱ ㄱㅇㄱㅎㄴ  # pivot = arr[0]\n    ㄱㅇㄱ ㄴ ㅂㅈㅎㄷ  # slice = arr[1:]\n    [ def _(pivot, slice):\n      # [x for x in slice if x < pivot]\n      ㄴㅇㄱ (ㄱㅇㄱ ㄱㅇㄴ ㅈㅎㄷㅎ)ㅅㅂㅎㄷ\n      # [pivot]\n      ㄱㅇㄱ ㅁㄹㅎㄴ\n      # [x for x in slice if x >= pivot]\n      ㄴㅇㄱ (ㄱㅇㄱ ㄱㅇㄴ ㅈㅎㄷ ㅁㅎㄴㅎ)ㅅㅂㅎㄷ\n      ㄷㅎㄹ  # return [..]+[..]+[..]\n    ㅎ] ㅎㄷ  # return _(pivot, slice)\n  # else:\n    ㄱㅇㄱ  # return arr\n  (ㄱ ㄱㅇㄱ ㅈㄷㅎㄴ ㅈㅎㄷ)ㅎㄷ  # endif\nㅎ]"},{id:"5",name:"절댓값.pbhhg",location:"./조각글/절댓값.pbhhg",fileType:"File",isLeaf:!0,data:"ㄱ ㅇㄱ (ㄴㄱ ㄴ ㄱ ㅇㄱ ㄱ ㅈ ㅎㄷ ㅎㄷ) ㄱ ㅎㄷ ㅎ"},{id:"6",name:"평범숫자.pbhhg",location:"./조각글/평범숫자.pbhhg",fileType:"File",isLeaf:!0,data:"import (조각글 절댓값 ㅂㅎㄷ)\nimport (조각글 표 ㅂㅎㄷ)\n\n[ def encode_number(number):\n    ㄱㅇㄱ ㄱㅇㄴㄱ ㅎㄴ\n    ㅁㅈㅎㄱ\n    [ def to_oct(to_parse, parsed):\n        ㄴㅇㄱ\n\n        ㄱㅇㄱ ㄱㄴㄱ ㄴㄴㅎㄷ  # quotient..next to_parse\n        ㄱㅇㄱ ㄱㄴㄱ ㄴㅁㅎㄷ  # remainder\n        [ def _(remainder):\n            ㄴㅇㄴ (ㄱㅇㄱ ㄴㅇㄴㄱㅎㄴ) ㄷㅎㄷ  # next parsed\n        ㅎ]\n        ㅎㄴ\n        ㄱㅇㅎㄷ\n\n        (ㄱㅇㄱ ㄱ ㄶㄷ)ㅎㄷ\n    ㅎ]\n    ㅎㄷ\n\n    [ def encode_sign(encoded):\n        ㄱㅇㄱ\n\n        '' ㅁㅈㅎㄱ\n        'ㄱ' ㄴㅇㄴㄱㅎㄴ\n        is_negative = ㄱㅇㄴ ㄱ ㅈㅎㄷ\n        is_even_lengthed = ㄴㄱ ㄱㅇㄱ ㅈㄷㅎㄴ ㅅㅎㄷ ㄴ ㄶㄷ\n        ㄶㄷ\n        ㅎㄷ\n\n        ㄷㅎㄷ\n    ㅎ]\n    ㅎㄴ\nㅎ]\n\nㅎㅎㄷ  # /import"},{id:"7",name:"표.pbhhg",location:"./조각글/표.pbhhg",fileType:"File",isLeaf:!0,data:"(ㅂ ㅂ ㅂㅎㄷ) ㄴㅅㅁㄱㄹㄱㅂㄴㄴㅅㅁㄹㄹㄷㅁㄴㄴㅈㅁㄱㄹㄷㄱㄷㄴㅅㄱㄴㅁㄷㅁㄴㅂㄱㅂㄱㄹㄱㄷㄷㄴㅅㄱ (ㄴ ㄱㄷㄱ ㄱㅇㄱㅎㄷ) (ㄱ ㄷ ㄱㅈㅎㄱ ㄱㅇㄱㅎㄹ) ㄴㄱㅎㄷㅎㄴ ㅎㅎㄴ"}]},{id:"0",name:"낙서장.txt",location:"./낙서장.txt",fileType:"File",isLeaf:!0,data:"난 지금도 가끔 얘기 해.\n누군간 여길 꿈꿨을까, 끝없는 헛된 후회 하나 했던걸까...\n"}]};function w(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,i,o,a,s=[],l=!0,u=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(s.push(r.value),s.length!==e);l=!0);}catch(n){u=!0,i=n}finally{try{if(!l&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(u)throw i}}return s}}(n,e)||O(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(n){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},_(n)}function O(n,e){if(n){if("string"==typeof n)return x(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?x(n,e):void 0}}function x(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function j(n,e,t){return(e=L(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function E(){E=function(){return n};var n={},e=Object.prototype,t=e.hasOwnProperty,r=Object.defineProperty||function(n,e,t){n[e]=t.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function l(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{l({},"")}catch(n){l=function(n,e,t){return n[e]=t}}function u(n,e,t,i){var o=e&&e.prototype instanceof d?e:d,a=Object.create(o.prototype),s=new S(i||[]);return r(a,"_invoke",{value:O(n,t,s)}),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=u;var f={};function d(){}function p(){}function h(){}var y={};l(y,o,(function(){return this}));var b=Object.getPrototypeOf,v=b&&b(b(k([])));v&&v!==e&&t.call(v,o)&&(y=v);var m=h.prototype=d.prototype=Object.create(y);function g(n){["next","throw","return"].forEach((function(e){l(n,e,(function(n){return this._invoke(e,n)}))}))}function w(n,e){function i(r,o,a,s){var l=c(n[r],n,o);if("throw"!==l.type){var u=l.arg,f=u.value;return f&&"object"==_(f)&&t.call(f,"__await")?e.resolve(f.__await).then((function(n){i("next",n,a,s)}),(function(n){i("throw",n,a,s)})):e.resolve(f).then((function(n){u.value=n,a(u)}),(function(n){return i("throw",n,a,s)}))}s(l.arg)}var o;r(this,"_invoke",{value:function(n,t){function r(){return new e((function(e,r){i(n,t,e,r)}))}return o=o?o.then(r,r):r()}})}function O(n,e,t){var r="suspendedStart";return function(i,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw o;return I()}for(t.method=i,t.arg=o;;){var a=t.delegate;if(a){var s=x(a,t);if(s){if(s===f)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===f)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}function x(n,e){var t=e.method,r=n.iterator[t];if(void 0===r)return e.delegate=null,"throw"===t&&n.iterator.return&&(e.method="return",e.arg=void 0,x(n,e),"throw"===e.method)||"return"!==t&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+t+"' method")),f;var i=c(r,n.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,f;var o=i.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,f):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,f)}function j(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function P(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function S(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(j,this),this.reset(!0)}function k(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,i=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:I}}function I(){return{value:void 0,done:!0}}return p.prototype=h,r(m,"constructor",{value:h,configurable:!0}),r(h,"constructor",{value:p,configurable:!0}),p.displayName=l(h,s,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,h):(n.__proto__=h,l(n,s,"GeneratorFunction")),n.prototype=Object.create(m),n},n.awrap=function(n){return{__await:n}},g(w.prototype),l(w.prototype,a,(function(){return this})),n.AsyncIterator=w,n.async=function(e,t,r,i,o){void 0===o&&(o=Promise);var a=new w(u(e,t,r,i),o);return n.isGeneratorFunction(t)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},g(m),l(m,s,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=Object(n),t=[];for(var r in e)t.push(r);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},n.values=k,S.prototype={constructor:S,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(P),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return a.type="throw",a.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=t.call(o,"catchLoc"),l=t.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&t.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=n,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(a)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),f},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),P(t),f}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var i=r.arg;P(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:k(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),f}},n}function P(n,e,t,r,i,o,a){try{var s=n[o](a),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,i)}function S(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function k(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,L(r.key),r)}}function I(n,e,t){return e&&k(n.prototype,e),t&&k(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function L(n){var e=function(n,e){if("object"!==_(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===_(e)?e:String(e)}var T=function(){function n(e){S(this,n),this.buffer=(new TextEncoder).encode(e),this.lastModifiedAt=Date.now()}return I(n,[{key:"tryReadAsString",value:function(){try{return(new TextDecoder).decode(this.buffer)}catch(n){if(n instanceof TypeError)return null;throw n}}},{key:"read",value:function(n,e){return this.buffer.slice(e,e+n)}},{key:"write",value:function(n,e){var t=n.length+e;return this.buffer.length<t&&this.truncate(t),this.buffer.set(n,e),this.lastModifiedAt=Date.now(),n.length}},{key:"truncate",value:function(n){var e=new Uint8Array(n);return e.set(this.buffer.slice(0,n)),this.buffer=e,this.lastModifiedAt=Date.now(),n}}]),n}(),N=function(){function n(e,t,r){S(this,n),this.fs=e,this.fileId=t,this.isReadable="w"!==r&&"a"!==r,this.isWritable="r"!==r,this.isClosed=!1;var i=e.get(t);"w"!==r&&"w+"!==r||i.truncate(0),this.cursor=0,"a"!==r&&"a+"!==r||(this.cursor=i.buffer.length)}var e,t;return I(n,[{key:"close",value:function(){this.fs.close(this.fileId),this.isClosed=!0}},{key:"read",value:(e=E().mark((function n(e){var t;return E().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(this.isReadable){n.next=2;break}throw Error("이 파일은 읽기 가능으로 열리지 않았습니다.");case 2:return t=this.fs.get(this.fileId),n.abrupt("return",t.read(e,this.cursor).buffer);case 4:case"end":return n.stop()}}),n,this)})),t=function(){var n=this,t=arguments;return new Promise((function(r,i){var o=e.apply(n,t);function a(n){P(o,r,i,a,s,"next",n)}function s(n){P(o,r,i,a,s,"throw",n)}a(void 0)}))},function(n){return t.apply(this,arguments)})},{key:"write",value:function(n){if(!this.isWritable)throw Error("이 파일은 쓰기 가능으로 열리지 않았습니다.");return this.fs.get(this.fileId).write(new Uint8Array(n),this.cursor)}},{key:"seek",value:function(n,e){if(this.isClosed)throw Error("닫힌 파일에 접근할 수 없습니다.");return"SEEK_CUR"===e?this.cursor+=n:this.cursor=n,this.cursor}},{key:"tell",value:function(){if(this.isClosed)throw Error("닫힌 파일에 접근할 수 없습니다.");return this.cursor}},{key:"truncate",value:function(n){return this.fs.get(this.fileId).truncate(null!=n?n:this.cursor)}}]),n}(),A=0,C=new(function(){function n(){S(this,n),j(this,"openedFiles",{}),j(this,"normalizePath",v),j(this,"joinPath",m),this.tree=g}return I(n,[{key:"get",value:function(n){if(n in this.openedFiles)return this.openedFiles[n];throw Error("닫힌 파일에 접근할 수 없습니다.")}},{key:"close",value:function(n){delete this.openedFiles[n]}},{key:"findParentOf",value:function(n){var e=n.split("/");if("."===e[0]&&e.shift(),0!==e.length){var t,r=this.tree,i=function(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=O(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,i=function(){};return{s:i,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){s=!0,o=n},f:function(){try{a||null==t.return||t.return()}finally{if(s)throw o}}}}(e.slice(0,-1));try{var o=function(){var n=t.value;if(null==r.children)return{v:void 0};var e=r.children.find((function(e){return e.name===n}));if(null==e)return{v:void 0};r=e};for(i.s();!(t=i.n()).done;){var a=o();if("object"===_(a))return a.v}}catch(n){i.e(n)}finally{i.f()}return r}}},{key:"findEntry",value:function(n){var e=n.split("/"),t=this.findParentOf(n);return null==t?this.tree:null!=t.children?t.children.find((function(n){return n.name===e[e.length-1]})):void 0}},{key:"findFile",value:function(n){n=v(n);var e=this.findEntry(n);return null!=e&&e.isLeaf?e.id in this.openedFiles?this.openedFiles[e.id]:new T(e.data):null}},{key:"create",value:function(n,e){n=v(n);var t=this.findParentOf(n);if(null==(null==t?void 0:t.children))throw Error("파일을 생성할 수 없습니다.");var r=n.split("/").reverse()[0];if(t.children.some((function(n){return n.name===r})))throw Error("파일이 이미 존재합니다.");var i="File"===e,o={name:r,id:"file-system-".concat(A++),isLeaf:i,fileType:e,location:n,children:i?void 0:[]};return t.children.push(o),o}},{key:"remove",value:function(n){var e=(n=v(n)).split("/").reverse()[0],t=this.findParentOf(n);if(null==(null==t?void 0:t.children))return!1;var r=t.children.findIndex((function(n){return n.name===e}));return!(t.children[r].id in this.openedFiles)&&(t.children.splice(r,1),!0)}},{key:"move",value:function(n,e){var t,r=(n=v(n)).split("/").reverse()[0];e=v(e);var i=this.findEntry(e);if(null==(null==i?void 0:i.children))return!1;if(i.children.some((function(n){return n.name===r})))return!1;var o=this.findParentOf(n);if(null==(null==o?void 0:o.children))return!1;var a=o.children.findIndex((function(n){return n.name===r})),s=w(o.children.splice(a,1),1)[0];return i.children.push(s),s.location=m(null!==(t=i.location)&&void 0!==t?t:"",r),!0}},{key:"save",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];n=v(n);var r=this.findEntry(n);return null==r&&(r=this.create(n,"File")),!(r.id in this.openedFiles&&!t)&&(r.data=e,!0)}},{key:"open",value:function(n,e){var t=this.findEntry(n);if(null==t){if("r"===e||"r+"===e)throw Error("지정 경로에 파일이 없습니다: ".concat(n));t=this.create(n,"File")}if(!t.isLeaf)throw Error("지정 경로에 파일이 없습니다: ".concat(n));if(t.id in this.openedFiles)throw Error("이미 사용중인 파일입니다: ".concat(n));return this.openedFiles[t.id]=new T(t.data),new N(this,t.id,e)}},{key:"load",value:function(n){var e=this.findFile(n);if(null==e)throw Error("지정 경로에 파일이 없습니다: ".concat(n));var t=e.tryReadAsString();if(null==t)throw Error("다음 파일이 UTF-8 형식이 아니라 해석할 수 없습니다: ".concat(n));return t}},{key:"isFile",value:function(n){n=v(n);var e=this.findEntry(n);if(null==e)throw Error("지정 경로에 파일이 없습니다: ".concat(n));return!!e.isLeaf}},{key:"listdir",value:function(n){n=v(n);var e=this.findEntry(n);if(null==e)throw Error("지정 경로에 디렉토리가 없습니다: ".concat(n));if(null==e.children)throw Error("지정 경로는 디렉토리가 아닙니다: ".concat(n));return e.children.map((function(n){return n.name||""}))}}]),n}());function F(n){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},F(n)}function R(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function D(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?R(Object(t),!0).forEach((function(e){Z(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):R(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function Z(n,e,t){return(e=function(n){var e=function(n,e){if("object"!==F(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===F(e)?e:String(e)}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function M(n){return function(n){if(Array.isArray(n))return U(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,e){if(!n)return;if("string"==typeof n)return U(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return U(n,e)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function U(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}var G=function(n){return JSON.parse(JSON.stringify(n))};function B(){i.ZP.folderTree.onSelectFile((function(n){var e,t;i.ZP.editor.open(D(D({},e=n),{},{id:null===(t=e.id)||void 0===t?void 0:t.toString(),data:{path:e.location,value:e.data}}))}))}function K(n){var e=n.location.split("/");n.name=e[e.length-1],i.ZP.folderTree.update(n)}function H(n){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},H(n)}function z(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,W(r.key),r)}}function $(n,e,t){return(e=W(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function W(n){var e=function(n,e){if("object"!==H(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===H(e)?e:String(e)}var q=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"FileSystemExtension",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"File System Extension";!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),$(this,"id",""),$(this,"name",""),this.id=e,this.name=t}var e,t,r;return e=n,(t=[{key:"activate",value:function(n){var e;i.ZP.folderTree.add((e=C.tree,JSON.parse(JSON.stringify(e)))),i.ZP.folderTree.onCreate((function(n,e){var t="File"===n?"새 파일.pbhhg":"새 디렉토리";if(null!=e&&"RootFolder"!==n){var r=i.ZP.folderTree.get(e);if(null!=(null==r?void 0:r.location)){var o=null==r?void 0:r.location.split("/");"File"===r.fileType?o.splice(-1,1,t):o.push(t);try{var a=G(C.create(o.join("/"),n));a.isEditable=!0,i.ZP.folderTree.add(a,e)}catch(n){return}}}})),i.ZP.folderTree.onDropTree((function(n,e){var t,r;C.move(null!==(t=n.location)&&void 0!==t?t:"",null!==(r=e.location)&&void 0!==r?r:"")&&(i.ZP.folderTree.remove(n.id),i.ZP.folderTree.add(n,e.id))})),i.ZP.folderTree.onRemove((function(n){var e=i.ZP.folderTree.get(n);null!=(null==e?void 0:e.location)&&C.remove(e.location)&&i.ZP.folderTree.remove(n)})),B(),i.ZP.folderTree.onUpdateFileName((function(n){var e;if(null==n.location)return K(n);if(""===n.name)return K(n);var t=C.findParentOf(n.location);if(null!=t&&null!==(e=t.children)&&void 0!==e&&e.some((function(e){return e.name===n.name})))return K(n);var r=C.findEntry(n.location);if(null==r)return K(n);r.name=n.name;var o=n.location.split("/");r.location=[].concat(M(o.slice(0,-1)),[n.name]).join("/"),i.ZP.folderTree.update(G(r))})),i.ZP.folderTree.toggleAutoSort()}},{key:"dispose",value:function(n){i.ZP.folderTree.toggleAutoSort()}}])&&z(e.prototype,t),r&&z(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}(),Y=t(3247),J=t(4896);function V(n){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},V(n)}function Q(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,tn(r.key),r)}}function X(n,e){return X=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,e){return n.__proto__=e,n},X(n,e)}function nn(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=en(n);if(e){var i=en(this).constructor;t=Reflect.construct(r,arguments,i)}else t=r.apply(this,arguments);return function(n,e){if(e&&("object"===V(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}(this,t)}}function en(n){return en=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},en(n)}function tn(n){var e=function(n,e){if("object"!==V(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==V(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===V(e)?e:String(e)}var rn,on,an,sn=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&X(n,e)}(a,n);var e,t,r,o=nn(a);function a(){return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),o.call(this,{id:a.ID,precondition:void 0,f1:!1,keybinding:{weight:J.KeybindingWeight.WorkbenchContrib,when:void 0,primary:(0,J.KeyChord)(Y.DC.CtrlCmd|Y.VD.KeyS)}})}return e=a,(t=[{key:"run",value:function(n){var e=i.ZP.editor.getState().current;null!=e&&e.tab&&function(n){if(C.save(n.data.path,n.data.value))return i.ZP.folderTree.update({id:n.id,data:n.data.value}),void i.ZP.editor.updateTab(D(D({},n),{},{status:void 0}));i.ZP.component.Modal.confirm({title:"파일을 덮어쓰시겠습니까?",content:"파일을 연 이후로 파일에 변경 사항이 있습니다. 파일을 덮어쓰면 변경 사항을 잃어버릴 수 있습니다.",onOk:function(){C.save(n.data.location,n.data.value,!0)&&(i.ZP.folderTree.update({id:n.id,data:n.data.value}),i.ZP.editor.updateTab(D(D({},n),{},{status:void 0})))},onCancel:function(){}})}(e.tab)}}])&&Q(e.prototype,t),r&&Q(e,r),Object.defineProperty(e,"prototype",{writable:!1}),a}(J.Action2);function ln(n){return ln="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},ln(n)}function un(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,fn(r.key),r)}}function cn(n,e,t){return(e=fn(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function fn(n){var e=function(n,e){if("object"!==ln(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==ln(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===ln(e)?e:String(e)}rn=sn,an="SaveKeybinding",(on=tn(on="ID"))in rn?Object.defineProperty(rn,on,{value:an,enumerable:!0,configurable:!0,writable:!0}):rn[on]=an;var dn=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"KeybindingExtension",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Keybinding Extension";!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),cn(this,"id",""),cn(this,"name",""),this.id=e,this.name=t}var e,t,r;return e=n,(t=[{key:"activate",value:function(n){n.registerAction(sn)}},{key:"dispose",value:function(n){throw new Error("Method not implemented.")}}])&&un(e.prototype,t),r&&un(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}(),pn=t(4021);function hn(n){return hn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},hn(n)}function yn(n){return function(n){if(Array.isArray(n))return En(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||jn(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function bn(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&vn(n,e)}function vn(n,e){return vn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,e){return n.__proto__=e,n},vn(n,e)}function mn(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=wn(n);if(e){var i=wn(this).constructor;t=Reflect.construct(r,arguments,i)}else t=r.apply(this,arguments);return function(n,e){if(e&&("object"===hn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return gn(n)}(this,t)}}function gn(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function wn(n){return wn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},wn(n)}function _n(){_n=function(){return n};var n={},e=Object.prototype,t=e.hasOwnProperty,r=Object.defineProperty||function(n,e,t){n[e]=t.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function l(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{l({},"")}catch(n){l=function(n,e,t){return n[e]=t}}function u(n,e,t,i){var o=e&&e.prototype instanceof d?e:d,a=Object.create(o.prototype),s=new E(i||[]);return r(a,"_invoke",{value:_(n,t,s)}),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=u;var f={};function d(){}function p(){}function h(){}var y={};l(y,o,(function(){return this}));var b=Object.getPrototypeOf,v=b&&b(b(P([])));v&&v!==e&&t.call(v,o)&&(y=v);var m=h.prototype=d.prototype=Object.create(y);function g(n){["next","throw","return"].forEach((function(e){l(n,e,(function(n){return this._invoke(e,n)}))}))}function w(n,e){function i(r,o,a,s){var l=c(n[r],n,o);if("throw"!==l.type){var u=l.arg,f=u.value;return f&&"object"==hn(f)&&t.call(f,"__await")?e.resolve(f.__await).then((function(n){i("next",n,a,s)}),(function(n){i("throw",n,a,s)})):e.resolve(f).then((function(n){u.value=n,a(u)}),(function(n){return i("throw",n,a,s)}))}s(l.arg)}var o;r(this,"_invoke",{value:function(n,t){function r(){return new e((function(e,r){i(n,t,e,r)}))}return o=o?o.then(r,r):r()}})}function _(n,e,t){var r="suspendedStart";return function(i,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw o;return S()}for(t.method=i,t.arg=o;;){var a=t.delegate;if(a){var s=O(a,t);if(s){if(s===f)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===f)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}function O(n,e){var t=e.method,r=n.iterator[t];if(void 0===r)return e.delegate=null,"throw"===t&&n.iterator.return&&(e.method="return",e.arg=void 0,O(n,e),"throw"===e.method)||"return"!==t&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+t+"' method")),f;var i=c(r,n.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,f;var o=i.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,f):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,f)}function x(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function j(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(x,this),this.reset(!0)}function P(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,i=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return p.prototype=h,r(m,"constructor",{value:h,configurable:!0}),r(h,"constructor",{value:p,configurable:!0}),p.displayName=l(h,s,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,h):(n.__proto__=h,l(n,s,"GeneratorFunction")),n.prototype=Object.create(m),n},n.awrap=function(n){return{__await:n}},g(w.prototype),l(w.prototype,a,(function(){return this})),n.AsyncIterator=w,n.async=function(e,t,r,i,o){void 0===o&&(o=Promise);var a=new w(u(e,t,r,i),o);return n.isGeneratorFunction(t)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},g(m),l(m,s,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=Object(n),t=[];for(var r in e)t.push(r);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},n.values=P,E.prototype={constructor:E,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(j),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return a.type="throw",a.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=t.call(o,"catchLoc"),l=t.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&t.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=n,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(a)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),f},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),j(t),f}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var i=r.arg;j(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:P(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),f}},n}function On(n,e,t,r,i,o,a){try{var s=n[o](a),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,i)}function xn(n){return function(){var e=this,t=arguments;return new Promise((function(r,i){var o=n.apply(e,t);function a(n){On(o,r,i,a,s,"next",n)}function s(n){On(o,r,i,a,s,"throw",n)}a(void 0)}))}}function jn(n,e){if(n){if("string"==typeof n)return En(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?En(n,e):void 0}}function En(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function Pn(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function Sn(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Ln(r.key),r)}}function kn(n,e,t){return e&&Sn(n.prototype,e),t&&Sn(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function In(n,e,t){return(e=Ln(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Ln(n){var e=function(n,e){if("object"!==hn(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==hn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===hn(e)?e:String(e)}var Tn=function(){function n(){Pn(this,n),In(this,"callbacks",[])}return kn(n,[{key:"onData",value:function(n){this.callbacks.push(n)}},{key:"write",value:function(n){var e,t=function(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=jn(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,i=function(){};return{s:i,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){s=!0,o=n},f:function(){try{a||null==t.return||t.return()}finally{if(s)throw o}}}}(this.callbacks);try{for(t.s();!(e=t.n()).done;){(0,e.value)(n)}}catch(n){t.e(n)}finally{t.f()}}}]),n}(),Nn=function(){function n(){var e=this;Pn(this,n),this.promise=new Promise((function(n){return e.resolve=n}))}return kn(n,[{key:"wait",value:function(){return this.promise}},{key:"notify",value:function(n){this.resolve&&this.resolve(n)}}]),n}(),An=function(){function n(){Pn(this,n)}var e;return kn(n,[{key:"close",value:function(){throw"NotImplemented"}},{key:"read",value:(e=xn(_n().mark((function n(e){return _n().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:throw"NotImplemented";case 1:case"end":return n.stop()}}),n)}))),function(n){return e.apply(this,arguments)})},{key:"write",value:function(n){throw"NotImplemented"}},{key:"seek",value:function(n,e){throw"NotImplemented"}},{key:"tell",value:function(){throw"NotImplemented"}},{key:"truncate",value:function(n){throw"NotImplemented"}}]),n}(),Cn=function(n){bn(o,n);var e,t,r,i=mn(o);function o(n){var e;return Pn(this,o),In(gn(e=i.call(this)),"buffer",[]),e.dataIncoming=new Nn,n.onData((function(n){return e.onData(n)})),e}return kn(o,[{key:"fillBuffer",value:(r=xn(_n().mark((function n(){return _n().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!this.buffer.length){n.next=2;break}return n.abrupt("return");case 2:return n.next=4,this.dataIncoming.wait();case 4:return n.abrupt("return",n.sent);case 5:case"end":return n.stop()}}),n,this)}))),function(){return r.apply(this,arguments)})},{key:"read",value:(t=xn(_n().mark((function n(e){var t,r,i,o,a,s;return _n().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:t=new TextEncoder,r="";case 2:if(!(e>0)){n.next=28;break}return n.next=5,this.fillBuffer();case 5:if(null!=(i=this.buffer.shift())){n.next=8;break}return n.abrupt("break",28);case 8:if("end-of-document"!==i.type){n.next=10;break}return n.abrupt("break",28);case 10:if("backspace"!==i.type){n.next=13;break}return r=r.slice(0,-1),n.abrupt("continue",2);case 13:o=0;case 14:if(!(o<i.data.length)){n.next=24;break}if(a=i.data[o],s=t.encode(a).byteLength,!(e<s)){n.next=20;break}return e=0,n.abrupt("break",24);case 20:o+=1,e-=s,n.next=14;break;case 24:r+=i.data.slice(0,o),o<i.data.length&&this.buffer.unshift({type:"ordinary",data:i.data.slice(o)}),n.next=2;break;case 28:return n.abrupt("return",t.encode(r).buffer);case 29:case"end":return n.stop()}}),n,this)}))),function(n){return t.apply(this,arguments)})},{key:"readLine",value:(e=xn(_n().mark((function n(){var e,t,r;return _n().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:e="";case 1:return n.next=4,this.fillBuffer();case 4:if(null!=(t=this.buffer.shift())){n.next=7;break}return n.abrupt("break",22);case 7:if("end-of-document"!==t.type){n.next=11;break}if(""!==e){n.next=10;break}return n.abrupt("return",void 0);case 10:return n.abrupt("break",22);case 11:if("backspace"!==t.type){n.next=14;break}return e=e.slice(0,-1),n.abrupt("continue",1);case 14:if(-1===(r=t.data.indexOf("\n"))){n.next=19;break}return e+=t.data.slice(0,r),this.buffer.unshift({type:"ordinary",data:t.data.slice(r+1)}),n.abrupt("break",22);case 19:e+=t.data,n.next=1;break;case 22:return e.endsWith("\r")&&(e=e.slice(0,-1)),n.abrupt("return",e);case 24:case"end":return n.stop()}}),n,this)}))),function(){return e.apply(this,arguments)})},{key:"onData",value:function(n){var e;if(0!==n.length){var t=this.dataIncoming;this.dataIncoming=new Nn,(e=this.buffer).push.apply(e,yn(n)),t.notify()}}}]),o}(An),Fn=function(n){bn(t,n);var e=mn(t);function t(n){var r;Pn(this,t),r=e.call(this);var i=new TextDecoderStream;return i.readable.pipeTo(new WritableStream({write:function(e){n.write([{type:"ordinary",data:e}])},close:function(){n.write([{type:"end-of-document"}])},abort:function(){n.write([{type:"end-of-document"}])}})),r.writer=i.writable.getWriter(),r}return kn(t,[{key:"write",value:function(n){var e=this;return this.writer.ready.then((function(){return e.writer.write(n)})),n.byteLength}},{key:"writeLine",value:function(n){var e=this,t=new TextEncoder;this.writer.ready.then((function(){return e.writer.write(t.encode(n+"\n"))}))}}]),t}(An);function Rn(n){return Rn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Rn(n)}function Dn(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=function(n,e){if(!n)return;if("string"==typeof n)return Zn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Zn(n,e)}(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,i=function(){};return{s:i,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){s=!0,o=n},f:function(){try{a||null==t.return||t.return()}finally{if(s)throw o}}}}function Zn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function Mn(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Gn(r.key),r)}}function Un(n,e,t){return(e=Gn(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Gn(n){var e=function(n,e){if("object"!==Rn(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==Rn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===Rn(e)?e:String(e)}var Bn=function(){function n(e,r){var i=this;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),Un(this,"previousLines",""),Un(this,"activeLine",""),this.previousLines="".concat(e," 실행 중...\r\n"),this.stdin=new Tn;var o=new Tn,a=new Tn;o.onData((function(n){return i.write(n)})),a.onData((function(n){return i.write(n)}));var s=new Cn(this.stdin),l=new Fn(o),u=new Fn(a),c={input:function(){return s.readLine()},print:function(n){return l.writeLine(n)}},f=function(n,e,t){return{open:function(r,i){if(0===r&&"r"===i)return n;if(1===r&&("w"===i||"a"===i))return e;if(2===r&&("w"===i||"a"===i))return t;if(0===r||1===r||2===r)throw Error("파일 접근 방식이 잘못되었습니다.");if("number"==typeof r)throw Error("다음 파일 기술자에 연결된 파일이 없습니다: "+r);return C.open(r,i)},load:function(n){return C.load(n)},isFile:function(n){return C.isFile(n)},listdir:function(n){return C.listdir(n)},normalizePath:v,joinPath:m}}(s,l,u);t.e(3800).then(t.bind(t,3800)).then((function(n){return n.run(e,r,[],c,f)})).then((function(n){i.write([{type:"ordinary",data:"\n[프로그램이 종료되었습니다. 종료 코드: ".concat(n,"]")}])})).catch((function(n){i.write([{type:"ordinary",data:"\n오류: "+(n instanceof Error?n.message:n)}])}))}var e,r,i;return e=n,(r=[{key:"write",value:function(n){var e,t=Dn(n);try{for(t.s();!(e=t.n()).done;){var r=e.value;if("backspace"===r.type){var i;if(0===this.activeLine.length)continue;var o=pn.length(this.activeLine.slice(-1));null===(i=this.terminal)||void 0===i||i.write("\b ");for(var a=0;a<o;a++){var s;null===(s=this.terminal)||void 0===s||s.write("\b")}this.activeLine=this.activeLine.slice(0,-1)}else if("end-of-document"===r.type){var l;if(this.activeLine.length)continue;null===(l=this.terminal)||void 0===l||l.write("^D\r\n"),this.previousLines+="^D\r\n"}else{var u,c=r.data.replace(/(?!\r)\n/g,"\r\n");null===(u=this.terminal)||void 0===u||u.write(c);var f=c.lastIndexOf("\r\n");-1===f?this.activeLine+=c:(this.previousLines+=this.activeLine+c.slice(0,f),this.activeLine=c.slice(f))}}}catch(n){t.e(n)}finally{t.f()}}},{key:"attach",value:function(n){n.write(this.previousLines),n.write(this.activeLine),this.terminal=n}},{key:"detach",value:function(){this.terminal=void 0}}])&&Mn(e.prototype,r),i&&Mn(e,i),Object.defineProperty(e,"prototype",{writable:!1}),n}(),Kn=t(7294),Hn=t(5697),zn=t.n(Hn),$n=t(2320);function Wn(n){return Wn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Wn(n)}function qn(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,Xn(r.key),r)}}function Yn(n,e){return Yn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,e){return n.__proto__=e,n},Yn(n,e)}function Jn(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=Qn(n);if(e){var i=Qn(this).constructor;t=Reflect.construct(r,arguments,i)}else t=r.apply(this,arguments);return function(n,e){if(e&&("object"===Wn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return Vn(n)}(this,t)}}function Vn(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function Qn(n){return Qn=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(n){return n.__proto__||Object.getPrototypeOf(n)},Qn(n)}function Xn(n){var e=function(n,e){if("object"!==Wn(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==Wn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===Wn(e)?e:String(e)}var ne=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&Yn(n,e)}(o,n);var e,t,r,i=Jn(o);function o(n){var e;return function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),(e=i.call(this,n)).terminalRef=Kn.createRef(),e.onData=e.onData.bind(Vn(e)),e.onCursorMove=e.onCursorMove.bind(Vn(e)),e.onKey=e.onKey.bind(Vn(e)),e.onBinary=e.onBinary.bind(Vn(e)),e.onLineFeed=e.onLineFeed.bind(Vn(e)),e.onScroll=e.onScroll.bind(Vn(e)),e.onSelectionChange=e.onSelectionChange.bind(Vn(e)),e.onRender=e.onRender.bind(Vn(e)),e.onResize=e.onResize.bind(Vn(e)),e.onTitleChange=e.onTitleChange.bind(Vn(e)),e.setupTerminal(),e}return e=o,(t=[{key:"setupTerminal",value:function(){var n=this;this.terminal=new $n.Terminal(this.props.options),this.props.addons&&this.props.addons.forEach((function(e){n.terminal.loadAddon(e)})),this.terminal.onBinary(this.onBinary),this.terminal.onCursorMove(this.onCursorMove),this.terminal.onData(this.onData),this.terminal.onKey(this.onKey),this.terminal.onLineFeed(this.onLineFeed),this.terminal.onScroll(this.onScroll),this.terminal.onSelectionChange(this.onSelectionChange),this.terminal.onRender(this.onRender),this.terminal.onResize(this.onResize),this.terminal.onTitleChange(this.onTitleChange),this.props.customKeyEventHandler&&this.terminal.attachCustomKeyEventHandler(this.props.customKeyEventHandler)}},{key:"componentDidMount",value:function(){this.terminalRef.current&&this.terminal.open(this.terminalRef.current)}},{key:"componentWillUnmount",value:function(){this.terminal.dispose()}},{key:"onBinary",value:function(n){this.props.onBinary&&this.props.onBinary(n)}},{key:"onCursorMove",value:function(){this.props.onCursorMove&&this.props.onCursorMove()}},{key:"onData",value:function(n){this.props.onData&&this.props.onData(n)}},{key:"onKey",value:function(n){this.props.onKey&&this.props.onKey(n)}},{key:"onLineFeed",value:function(){this.props.onLineFeed&&this.props.onLineFeed()}},{key:"onScroll",value:function(n){this.props.onScroll&&this.props.onScroll(n)}},{key:"onSelectionChange",value:function(){this.props.onSelectionChange&&this.props.onSelectionChange()}},{key:"onRender",value:function(n){this.props.onRender&&this.props.onRender(n)}},{key:"onResize",value:function(n){this.props.onResize&&this.props.onResize(n)}},{key:"onTitleChange",value:function(n){this.props.onTitleChange&&this.props.onTitleChange(n)}},{key:"render",value:function(){return Kn.createElement("div",{className:this.props.className,ref:this.terminalRef})}}])&&qn(e.prototype,t),r&&qn(e,r),Object.defineProperty(e,"prototype",{writable:!1}),o}(Kn.Component);function ee(n){var e=Kn.useRef(null);return Kn.useEffect((function(){var t;return null!==(t=e.current)&&void 0!==t&&t.terminal&&n.session.attach(e.current.terminal),function(){return n.session.detach()}}),[]),Kn.createElement(ne,{ref:e,onData:function(e){var t=e.charCodeAt(0);if(4===t)return n.session.write([{type:"end-of-document"}]),void n.session.stdin.write([{type:"end-of-document"}]);if(13===t)e="\r\n";else if(10===t||9===t);else{if(t<32)return;if(127===t)return n.session.write([{type:"backspace"}]),void n.session.stdin.write([{type:"backspace"}])}n.session.write([{type:"ordinary",data:e}]),n.session.stdin.write([{type:"ordinary",data:e}])}})}!function(n,e,t){(e=Xn(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t}(ne,"propTypes",{className:zn().string,options:zn().object,addons:zn().array,onBinary:zn().func,onCursorMove:zn().func,onData:zn().func,onKey:zn().func,onLineFeed:zn().func,onScroll:zn().func,onSelectionChange:zn().func,onRender:zn().func,onResize:zn().func,onTitleChange:zn().func,customKeyEventHandler:zn().func});var te=t(7294),re={id:"launchConsole",name:"launch",icon:"play",place:"outer",disabled:!1,title:"실행"};function ie(n,e,t){var r=e.split("/"),i=r[r.length-1],o=new Bn(e,t);return{id:"console-".concat(n),name:"".concat(i," 실행"),title:"".concat(i," 실행"),renderPane:function(){return te.createElement(ee,{session:o})}}}function oe(n){return oe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},oe(n)}function ae(){ae=function(){return n};var n={},e=Object.prototype,t=e.hasOwnProperty,r=Object.defineProperty||function(n,e,t){n[e]=t.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",a=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function l(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{l({},"")}catch(n){l=function(n,e,t){return n[e]=t}}function u(n,e,t,i){var o=e&&e.prototype instanceof d?e:d,a=Object.create(o.prototype),s=new E(i||[]);return r(a,"_invoke",{value:_(n,t,s)}),a}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=u;var f={};function d(){}function p(){}function h(){}var y={};l(y,o,(function(){return this}));var b=Object.getPrototypeOf,v=b&&b(b(P([])));v&&v!==e&&t.call(v,o)&&(y=v);var m=h.prototype=d.prototype=Object.create(y);function g(n){["next","throw","return"].forEach((function(e){l(n,e,(function(n){return this._invoke(e,n)}))}))}function w(n,e){function i(r,o,a,s){var l=c(n[r],n,o);if("throw"!==l.type){var u=l.arg,f=u.value;return f&&"object"==oe(f)&&t.call(f,"__await")?e.resolve(f.__await).then((function(n){i("next",n,a,s)}),(function(n){i("throw",n,a,s)})):e.resolve(f).then((function(n){u.value=n,a(u)}),(function(n){return i("throw",n,a,s)}))}s(l.arg)}var o;r(this,"_invoke",{value:function(n,t){function r(){return new e((function(e,r){i(n,t,e,r)}))}return o=o?o.then(r,r):r()}})}function _(n,e,t){var r="suspendedStart";return function(i,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw o;return S()}for(t.method=i,t.arg=o;;){var a=t.delegate;if(a){var s=O(a,t);if(s){if(s===f)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===f)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}function O(n,e){var t=e.method,r=n.iterator[t];if(void 0===r)return e.delegate=null,"throw"===t&&n.iterator.return&&(e.method="return",e.arg=void 0,O(n,e),"throw"===e.method)||"return"!==t&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+t+"' method")),f;var i=c(r,n.iterator,e.arg);if("throw"===i.type)return e.method="throw",e.arg=i.arg,e.delegate=null,f;var o=i.arg;return o?o.done?(e[n.resultName]=o.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,f):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,f)}function x(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function j(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function E(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(x,this),this.reset(!0)}function P(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,i=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return i.next=i}}return{next:S}}function S(){return{value:void 0,done:!0}}return p.prototype=h,r(m,"constructor",{value:h,configurable:!0}),r(h,"constructor",{value:p,configurable:!0}),p.displayName=l(h,s,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===p||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,h):(n.__proto__=h,l(n,s,"GeneratorFunction")),n.prototype=Object.create(m),n},n.awrap=function(n){return{__await:n}},g(w.prototype),l(w.prototype,a,(function(){return this})),n.AsyncIterator=w,n.async=function(e,t,r,i,o){void 0===o&&(o=Promise);var a=new w(u(e,t,r,i),o);return n.isGeneratorFunction(t)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},g(m),l(m,s,"Generator"),l(m,o,(function(){return this})),l(m,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=Object(n),t=[];for(var r in e)t.push(r);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},n.values=P,E.prototype={constructor:E,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(j),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return a.type="throw",a.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=t.call(o,"catchLoc"),l=t.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&t.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=n,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(a)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),f},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),j(t),f}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var i=r.arg;j(t)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:P(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),f}},n}function se(n,e,t,r,i,o,a){try{var s=n[o](a),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,i)}function le(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function ue(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?le(Object(t),!0).forEach((function(e){he(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):le(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function ce(n){return function(n){if(Array.isArray(n))return de(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||fe(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function fe(n,e){if(n){if("string"==typeof n)return de(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?de(n,e):void 0}}function de(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function pe(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,ye(r.key),r)}}function he(n,e,t){return(e=ye(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function ye(n){var e=function(n,e){if("object"!==oe(n)||null===n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,e||"default");if("object"!==oe(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(n)}(n,"string");return"symbol"===oe(e)?e:String(e)}var be=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"LauncherExtension",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Launcher Extension";!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),he(this,"id",""),he(this,"name",""),this.id=e,this.name=t,this.consoleIds=[]}var e,t,r;return e=n,t=[{key:"activate",value:function(n){this.initUI(),this.onClickAction()}},{key:"initUI",value:function(){var n=i.ZP.builtin.getModule("builtInEditorInitialActions");i.ZP.editor.setDefaultActions([ue({},re)].concat(ce(null==n?void 0:n.value)))}},{key:"onClickAction",value:function(){var n=this;i.ZP.editor.onActionsClick(function(){var e,t=(e=ae().mark((function e(t,r){var o,a,s,l,u;return ae().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=t,e.next=e.t0===re.id?3:11;break;case 3:if(null!=(s=null===(o=r.tab)||void 0===o?void 0:o.id)){e.next=6;break}return e.abrupt("return");case 6:return l=r.tab.location,u=ie(s,l,null===(a=r.tab)||void 0===a?void 0:a.data.value),-1===n.consoleIds.indexOf(u.id)&&n.consoleIds.push(u.id),i.ZP.panel.open(u),e.abrupt("break",12);case 11:return e.abrupt("break",12);case 12:case"end":return e.stop()}}),e)})),function(){var n=this,t=arguments;return new Promise((function(r,i){var o=e.apply(n,t);function a(n){se(o,r,i,a,s,"next",n)}function s(n){se(o,r,i,a,s,"throw",n)}a(void 0)}))});return function(n,e){return t.apply(this,arguments)}}())}},{key:"dispose",value:function(n){var e,t=function(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=fe(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,i=function(){};return{s:i,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,s=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){s=!0,o=n},f:function(){try{a||null==t.return||t.return()}finally{if(s)throw o}}}}(this.consoleIds);try{for(t.s();!(e=t.n()).done;){var r=e.value;i.ZP.panel.remove(r)}}catch(n){t.e(n)}finally{t.f()}}}],t&&pe(e.prototype,t),r&&pe(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}(),ve=t(7294),me=(0,i.Ue)({extensions:[new b,new q,new be,new dn]});function ge(){return me.render(ve.createElement(i.Lq,null))}me.onBeforeInit((function(){i.ZP.builtin.inactiveModule("activityBarData"),i.ZP.builtin.inactiveModule("builtInExplorerOutlinePanel"),i.ZP.builtin.inactiveModule("builtInPanelProblems"),i.ZP.builtin.inactiveModule("builtInStatusProblems"),i.ZP.builtin.inactiveModule("builtInMenuBarData"),i.ZP.builtin.inactiveModule("builtInSearchActivityItem")})),me.onBeforeLoad((function(){i.ZP.i18n.setCurrentLocale("ko-KR"),i.ZP.layout.toggleMenuBarVisibility(),i.ZP.layout.toggleActivityBarVisibility()}));var we=t(7294);r.createRoot(document.getElementById("root")).render(we.createElement(ge,null))}},a={};function s(n){var e=a[n];if(void 0!==e)return e.exports;var t=a[n]={id:n,loaded:!1,exports:{}};return o[n].call(t.exports,t,t.exports,s),t.loaded=!0,t.exports}s.m=o,s.amdO={},n=[],s.O=(e,t,r,i)=>{if(!t){var o=1/0;for(c=0;c<n.length;c++){for(var[t,r,i]=n[c],a=!0,l=0;l<t.length;l++)(!1&i||o>=i)&&Object.keys(s.O).every((n=>s.O[n](t[l])))?t.splice(l--,1):(a=!1,i<o&&(o=i));if(a){n.splice(c--,1);var u=r();void 0!==u&&(e=u)}}return e}i=i||0;for(var c=n.length;c>0&&n[c-1][2]>i;c--)n[c]=n[c-1];n[c]=[t,r,i]},s.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return s.d(e,{a:e}),e},t=Object.getPrototypeOf?n=>Object.getPrototypeOf(n):n=>n.__proto__,s.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var i=Object.create(null);s.r(i);var o={};e=e||[null,t({}),t([]),t(t)];for(var a=2&r&&n;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach((e=>o[e]=()=>n[e]));return o.default=()=>n,s.d(i,o),i},s.d=(n,e)=>{for(var t in e)s.o(e,t)&&!s.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},s.f={},s.e=n=>Promise.all(Object.keys(s.f).reduce(((e,t)=>(s.f[t](n,e),e)),[])),s.u=n=>n+"."+{180:"854812ab6252d79220f9",249:"f3093c0ca03487146e8f",525:"3b1106b2570ffe5d8486",665:"5ef581078e8fa325d5d8",848:"6e64fa61e2ee23c59d0d",854:"8d3e5b8161d87de9c927",911:"070b97a2da3e486cbf77",996:"df4d568e1de885bbbb88",1065:"91fe56d191e8cc6d2f56",1134:"08362145f306443dba4d",1147:"6fadb0de4c7012418aee",1156:"534d9dd1f4b96b1d5ecd",1259:"76e217eba33be63b597c",1448:"6879eea73853a214d10d",1471:"adb47cfab16fa8fb70b1",1886:"b3aaf48cd2a42bb51b77",1960:"132d2ad7143b4158b97c",1961:"9181ac761bbd3ee9509f",2060:"5264c48aa227a8f84539",2075:"795bb5a72b043414191a",2140:"0290958da68bdcadd1ec",2240:"db0041db1f78c232fa12",2571:"781fd93d30518e4b544d",2798:"00739035b6a41f7c9f6e",2814:"11b3b875dfca2c380c06",2892:"6f1390f1887649927b93",2911:"5cf72ff1f51d19581c9c",2954:"8f620dc5df9fcc561ba0",3036:"78f4aed2f69c72268319",3585:"639eb19d37cf1f39fbfc",3632:"dab3b7453070094bb6d8",3682:"a24ffb6b2c7e5bbfc8c8",3760:"7de244fab77e39290328",3800:"dcb98b2074681f563128",3919:"c02da833684ece880c03",4028:"6493153a171920d8698c",4129:"392f6081355b52d38f65",4188:"0048867ee63b26b9f9d6",4368:"e2f5a1863886ce3070fb",4386:"33ba5c01fa34a7ae5ad7",4407:"c8b098bd3319a11719b4",4902:"bcb374a0aadee7905369",4912:"55177a826bf31929f863",4946:"e5b8d00abf2729675f67",5062:"225432ec8d3806aaab9d",5288:"f8e42fc7c87841161281",5377:"a1689fac011175053b1e",5593:"39ae54bd1f26e2f65152",5703:"43c266b69883b15e8192",5849:"1601ba64268251fc178e",5962:"12bc16a0fd66300fbc40",6082:"def24e09552b5c8f0fd0",6241:"33a63d6de220cd67d9e1",6424:"3f0912584a71c1282fb1",6449:"bde5ca8df8b47b28cb07",6489:"70f583e05f98791fb561",6587:"3a7afa4490718f545fab",6717:"cadddf4541aff2d45e19",7043:"b76ac5b5f93000e41eb4",7131:"3ff7f4d0f824bbf2cb61",7287:"784688a8c33eca294ed6",7562:"2da982dc8ff1aa14266b",7637:"81665934972deeb2af67",7778:"4b41ddf9bb068a9f3526",7835:"918e7e2e9c42c316dcf6",8070:"bc6f125170aaf73b11a0",8084:"9d5d45e115194421ee84",8180:"1cef437baafc80e0e03f",8401:"653aefe2114b0663656e",8424:"460b04458fe15c653594",8670:"e60d5ca63977ad1d5e06",8715:"f5202c4d37f5826c2e7a",8719:"9767e6ba6e86e0413962",8906:"27c0177a748f0f300b8c",8946:"ebeeaa78b6dc85a60218",9343:"e735ae2b15d7a4e52570",9398:"45c1696962dc9e347c66",9400:"0cc501ffd8ab927dcea1",9537:"612b70f0331ac67b9ca6",9684:"3fd8f36ef0044a40d763",9907:"63f5a976c0ac4fc5e13a"}[n]+".js",s.miniCssF=n=>{},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),s.hmd=n=>((n=Object.create(n)).children||(n.children=[]),Object.defineProperty(n,"exports",{enumerable:!0,set:()=>{throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+n.id)}}),n),s.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r={},i="unsuspected-hangeul-ide:",s.l=(n,e,t,o)=>{if(r[n])r[n].push(e);else{var a,l;if(void 0!==t)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var f=u[c];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==i+t){a=f;break}}a||(l=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,s.nc&&a.setAttribute("nonce",s.nc),a.setAttribute("data-webpack",i+t),a.src=n),r[n]=[e];var d=(e,t)=>{a.onerror=a.onload=null,clearTimeout(p);var i=r[n];if(delete r[n],a.parentNode&&a.parentNode.removeChild(a),i&&i.forEach((n=>n(t))),e)return e(t)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=d.bind(null,a.onerror),a.onload=d.bind(null,a.onload),l&&document.head.appendChild(a)}},s.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},s.nmd=n=>(n.paths=[],n.children||(n.children=[]),n),s.p="./",(()=>{var n={179:0};s.f.j=(e,t)=>{var r=s.o(n,e)?n[e]:void 0;if(0!==r)if(r)t.push(r[2]);else{var i=new Promise(((t,i)=>r=n[e]=[t,i]));t.push(r[2]=i);var o=s.p+s.u(e),a=new Error;s.l(o,(t=>{if(s.o(n,e)&&(0!==(r=n[e])&&(n[e]=void 0),r)){var i=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;a.message="Loading chunk "+e+" failed.\n("+i+": "+o+")",a.name="ChunkLoadError",a.type=i,a.request=o,r[1](a)}}),"chunk-"+e,e)}},s.O.j=e=>0===n[e];var e=(e,t)=>{var r,i,[o,a,l]=t,u=0;if(o.some((e=>0!==n[e]))){for(r in a)s.o(a,r)&&(s.m[r]=a[r]);if(l)var c=l(s)}for(e&&e(t);u<o.length;u++)i=o[u],s.o(n,i)&&n[i]&&n[i][0](),n[i]=0;return s.O(c)},t=self.webpackChunkunsuspected_hangeul_ide=self.webpackChunkunsuspected_hangeul_ide||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))})();var l=s.O(void 0,[1302],(()=>s(1484)));l=s.O(l)})();